QuestItemTemplate : struct.begin {refurl=../ItemPrototypes.cfg;refkey=[0]}
   SID = QuestItemTemplate
   // Flag representing lookup key switch for localization string
   IsQuestItemPrototype = true
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = true
   ShouldTriggerAnomalies = false
   EffectPrototypeSIDs : struct.begin
      [0] = empty{bskipref}
   struct.end
   Type = EItemType::Other
   RequireWeight = false
struct.end
TemplateQuestArmor : struct.begin {refurl=ArmorPrototypes.cfg;refkey=TemplateArmor}
   SID = TemplateQuestArmor
   IsQuestItemPrototype = true
   IsQuestItem = true
   ShouldTriggerAnomalies = false
   RequireWeight = false
struct.end
TemplateQuestArtifact : struct.begin {refurl=ArtifactPrototypes.cfg;refkey=TemplateArtifact}
   SID = TemplateQuestArtifact
   IsQuestItemPrototype = true
   IsQuestItem = true
   ShouldTriggerAnomalies = false
   RequireWeight = false
struct.end
TemplateQuestConsumable : struct.begin {refurl=ConsumablePrototypes.cfg;refkey=TemplateConsumable}
   SID = TemplateQuestConsumable
   IsQuestItemPrototype = true
   IsQuestItem = true
   ShouldTriggerAnomalies = false
   RequireWeight = false
struct.end
TemplateQuestDetector : struct.begin {refurl=DetectorPrototypes.cfg;refkey=TemplateDetector}
   SID = TemplateQuestDetector
   IsQuestItemPrototype = true
   IsQuestItem = true
   ShouldTriggerAnomalies = false
   RequireWeight = false
struct.end
TemplateQuestWeapon : struct.begin {refurl=WeaponPrototypes.cfg;refkey=TemplateWeapon}
   SID = TemplateQuestWeapon
   IsQuestItemPrototype = true
   IsQuestItem = true
   ShouldTriggerAnomalies = false
   RequireWeight = false
struct.end
Scanner : struct.begin {refkey=[0]}
   SID = Scanner
   MeshPrototypeSID = Scanner_Skif
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/T_inv_QuestItem_green_topaz.T_inv_QuestItem_green_topaz'
   Weight = 25
   ItemGridWidth = 2
   ItemGridHeight = 3
   Cost = 8500
   IsQuestItem = true
struct.end
Inductor : struct.begin {refkey=[0]}
   SID = Inductor
   MeshPrototypeSID = Inductor
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/T_inv_needrename_2.T_inv_needrename_2'
   ItemGridHeight = 2
   Cost = 5000
   Weight = 2
   IsQuestItem = true
struct.end
BasePDA : struct.begin {refkey=[0]}
   SID = BasePDA
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/IIT_pda_base.IIT_pda_base'
   ItemGridWidth = 2
   ItemGridHeight = 1
   MeshPrototypeSID = BasePDA
   Weight = 0.2
   Cost = 150
struct.end
BasePDA_Bandits : struct.begin {refkey=[0]}
   SID = BasePDA_Bandits
   IsQuestItemPrototype = true
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = true
   ShouldTriggerAnomalies = false
   Type = EItemType::Other
   RequireWeight = false
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/IIT_pda_bandits.IIT_pda_bandits'
   ItemGridWidth = 2
   ItemGridHeight = 1
   MeshPrototypeSID = BasePDA_Bandits
   Weight = 0.2
   Cost = 150
struct.end
BasePDA_Neutrals : struct.begin {refkey=[0]}
   SID = BasePDA_Neutrals
   IsQuestItemPrototype = true
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = true
   ShouldTriggerAnomalies = false
   Type = EItemType::Other
   RequireWeight = false
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/IIT_pda_loners.IIT_pda_loners'
   ItemGridWidth = 2
   ItemGridHeight = 1
   MeshPrototypeSID = BasePDA_Neutrals
   Weight = 0.2
   Cost = 150
struct.end
BasePDA_Freedom : struct.begin {refkey=[0]}
   SID = BasePDA_Freedom
   IsQuestItemPrototype = true
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = true
   ShouldTriggerAnomalies = false
   Type = EItemType::Other
   RequireWeight = false
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/IIT_pda_freedom.IIT_pda_freedom'
   ItemGridWidth = 2
   ItemGridHeight = 1
   MeshPrototypeSID = BasePDA_Freedom
   Weight = 0.2
   Cost = 150
struct.end
BasePDA_Duty : struct.begin {refkey=[0]}
   SID = BasePDA_Duty
   IsQuestItemPrototype = true
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = true
   ShouldTriggerAnomalies = false
   Type = EItemType::Other
   RequireWeight = false
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/IIT_pda_duty.IIT_pda_duty'
   ItemGridWidth = 2
   ItemGridHeight = 1
   MeshPrototypeSID = BasePDA_Duty
   Weight = 0.2
   Cost = 150
struct.end
BasePDA_Spark : struct.begin {refkey=[0]}
   SID = BasePDA_Spark
   IsQuestItemPrototype = true
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = true
   ShouldTriggerAnomalies = false
   Type = EItemType::Other
   RequireWeight = false
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/IIT_pda_spark.IIT_pda_spark'
   ItemGridWidth = 2
   ItemGridHeight = 1
   MeshPrototypeSID = BasePDA_Spark
   Weight = 0.2
   Cost = 150
struct.end
BasePDA_Ward : struct.begin {refkey=[0]}
   SID = BasePDA_Ward
   IsQuestItemPrototype = true
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = true
   ShouldTriggerAnomalies = false
   Type = EItemType::Other
   RequireWeight = false
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/IIT_pda_ward.IIT_pda_ward'
   ItemGridWidth = 2
   ItemGridHeight = 1
   MeshPrototypeSID = BasePDA_Ward
   Weight = 0.2
   Cost = 150
struct.end
BasePDA_Military : struct.begin {refkey=[0]}
   SID = BasePDA_Military
   IsQuestItemPrototype = true
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = true
   ShouldTriggerAnomalies = false
   Type = EItemType::Other
   RequireWeight = false
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/IIT_pda_msop.IIT_pda_msop'
   ItemGridWidth = 2
   ItemGridHeight = 1
   MeshPrototypeSID = BasePDA_Military
   Weight = 0.2
   Cost = 150
struct.end
BasePDA_Monolith : struct.begin {refkey=[0]}
   SID = BasePDA_Monolith
   IsQuestItemPrototype = true
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = true
   ShouldTriggerAnomalies = false
   Type = EItemType::Other
   RequireWeight = false
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/IIT_pda_Monolith.IIT_pda_Monolith'
   ItemGridWidth = 2
   ItemGridHeight = 1
   MeshPrototypeSID = BasePDA_Monolith
   Weight = 0.2
   Cost = 150
struct.end
BasePDA_MonolithBroken : struct.begin {refkey=[0]}
   SID = BasePDA_MonolithBroken
   IsQuestItemPrototype = true
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = true
   ShouldTriggerAnomalies = false
   Type = EItemType::Other
   RequireWeight = false
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/IIT_pda_MonolithBroken.IIT_pda_MonolithBroken'
   ItemGridWidth = 2
   ItemGridHeight = 1
   MeshPrototypeSID = BasePDA_MonolithBroken
   Weight = 0.2
   Cost = 150
struct.end
BasePDA_Mercs : struct.begin {refkey=[0]}
   SID = BasePDA_Mercs
   IsQuestItemPrototype = true
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = true
   ShouldTriggerAnomalies = false
   Type = EItemType::Other
   RequireWeight = false
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/IIT_pda_mercenaries.IIT_pda_mercenaries'
   ItemGridWidth = 2
   ItemGridHeight = 1
   MeshPrototypeSID = BasePDA_Mercs
   Weight = 0.2
   Cost = 150
struct.end
QuestItem_Recorder_Base : struct.begin {refkey=[0]}
   SID = QuestItem_Recorder_Base
   IsQuestItemPrototype = true
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = true
   ShouldTriggerAnomalies = false
   Type = EItemType::Other
   RequireWeight = false
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/IIT_QuestItem_Recorder_Base.IIT_QuestItem_Recorder_Base'
   MeshPrototypeSID = QuestItem_Recorder_Base
   ItemGridWidth = 1
   ItemGridHeight = 1
   Weight = 0.2
   Cost = 500
struct.end
QuestItem_Notepad_Leather : struct.begin {refkey=[0]}
   SID = QuestItem_Notepad_Leather
   IsQuestItemPrototype = true
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = true
   ShouldTriggerAnomalies = false
   Type = EItemType::Other
   RequireWeight = false
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/IIT_QuestItem_Notepad_Leather.IIT_QuestItem_Notepad_Leather'
   MeshPrototypeSID = QuestItem_Notepad_Leather
   ItemGridWidth = 1
   ItemGridHeight = 2
   Weight = 0.1
   Cost = 300
struct.end
QuestItem_Notepad_Paper : struct.begin {refkey=[0]}
   SID = QuestItem_Notepad_Paper
   IsQuestItemPrototype = true
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = true
   ShouldTriggerAnomalies = false
   Type = EItemType::Other
   RequireWeight = false
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/IIT_QuestItem_Notepad_Paper.IIT_QuestItem_Notepad_Paper'
   MeshPrototypeSID = QuestItem_Notepad_Paper
   ItemGridWidth = 1
   ItemGridHeight = 2
   Weight = 0.1
   Cost = 300
struct.end
QuestItem_Notepad_OldDiary : struct.begin {refkey=[0]}
   SID = QuestItem_Notepad_OldDiary
   IsQuestItemPrototype = true
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = true
   ShouldTriggerAnomalies = false
   Type = EItemType::Other
   RequireWeight = false
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/IIT_QuestItem_Notepad_OldDiary.IIT_QuestItem_Notepad_OldDiary'
   MeshPrototypeSID = QuestItem_Notepad_OldDiary
   ItemGridWidth = 1
   ItemGridHeight = 2
   Weight = 0.1
   Cost = 300
struct.end
QuestItem_Notepad_Officer : struct.begin {refkey=[0]}
   SID = QuestItem_Notepad_Officer
   IsQuestItemPrototype = true
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = true
   ShouldTriggerAnomalies = false
   Type = EItemType::Other
   RequireWeight = false
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/IIT_QuestItem_Notepad_Office.IIT_QuestItem_Notepad_Office'
   MeshPrototypeSID = QuestItem_Notepad_Officer
   ItemGridWidth = 1
   ItemGridHeight = 2
   Weight = 0.3
   Cost = 700
struct.end
QuestItem_USB_Damaged_White : struct.begin {refkey=[0]}
   SID = QuestItem_USB_Damaged_White
   IsQuestItemPrototype = true
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = true
   ShouldTriggerAnomalies = false
   Type = EItemType::Other
   RequireWeight = false
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/IIT_QuestItem_USB_Damaged_White.IIT_QuestItem_USB_Damaged_White'
   MeshPrototypeSID = QuestItem_USB_Damaged_White
   ItemGridWidth = 1
   ItemGridHeight = 1
   Weight = 0.05
   Cost = 300
struct.end
QuestItem_USB_Damaged_Black : struct.begin {refkey=[0]}
   SID = QuestItem_USB_Damaged_Black
   IsQuestItemPrototype = true
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = true
   ShouldTriggerAnomalies = false
   Type = EItemType::Other
   RequireWeight = false
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/IIT_QuestItem_USB_Damaged_Black.IIT_QuestItem_USB_Damaged_Black'
   MeshPrototypeSID = QuestItem_USB_Damaged_Black
   ItemGridWidth = 1
   ItemGridHeight = 1
   Weight = 0.05
   Cost = 300
struct.end
QuestItem_USB_Damaged_Blue : struct.begin {refkey=[0]}
   SID = QuestItem_USB_Damaged_Blue
   IsQuestItemPrototype = true
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = true
   ShouldTriggerAnomalies = false
   Type = EItemType::Other
   RequireWeight = false
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/IIT_QuestItem_USB_Damaged_Blue.IIT_QuestItem_USB_Damaged_Blue'
   MeshPrototypeSID = QuestItem_USB_Damaged_Blue
   ItemGridWidth = 1
   ItemGridHeight = 1
   Weight = 0.05
   Cost = 300
struct.end
QuestItem_USB_Damaged_Burnt : struct.begin {refkey=[0]}
   SID = QuestItem_USB_Damaged_Burnt
   IsQuestItemPrototype = true
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = true
   ShouldTriggerAnomalies = false
   Type = EItemType::Other
   RequireWeight = false
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/IIT_QuestItem_USB_Damaged_Burnt.IIT_QuestItem_USB_Damaged_Burnt'
   MeshPrototypeSID = QuestItem_USB_Damaged_Burnt
   ItemGridWidth = 1
   ItemGridHeight = 1
   Weight = 0.05
   Cost = 250
struct.end
QuestItem_USB_Stalker_Blue : struct.begin {refkey=[0]}
   SID = QuestItem_USB_Stalker_Blue
   IsQuestItemPrototype = true
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = true
   ShouldTriggerAnomalies = false
   Type = EItemType::Other
   RequireWeight = false
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/IIT_QuestItem_USB_Modern_Blue.IIT_QuestItem_USB_Modern_Blue'
   MeshPrototypeSID = QuestItem_USB_Stalker_Blue
   ItemGridWidth = 1
   ItemGridHeight = 1
   Weight = 0.05
   Cost = 400
struct.end
QuestItem_USB_Stalker_Red : struct.begin {refkey=[0]}
   SID = QuestItem_USB_Stalker_Red
   IsQuestItemPrototype = true
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = true
   ShouldTriggerAnomalies = false
   Type = EItemType::Other
   RequireWeight = false
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/IIT_QuestItem_USB_Modern_Red.IIT_QuestItem_USB_Modern_Red'
   MeshPrototypeSID = QuestItem_USB_Stalker_Red
   ItemGridWidth = 1
   ItemGridHeight = 1
   Weight = 0.05
   Cost = 400
struct.end
QuestItem_USB_Stalker_Big : struct.begin {refkey=[0]}
   SID = QuestItem_USB_Stalker_Big
   IsQuestItemPrototype = true
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = true
   ShouldTriggerAnomalies = false
   Type = EItemType::Other
   RequireWeight = false
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/IIT_QuestItem_USB_Stalker_Big.IIT_QuestItem_USB_Stalker_Big'
   MeshPrototypeSID = QuestItem_USB_Stalker_Big
   ItemGridWidth = 1
   ItemGridHeight = 1
   Weight = 0.05
   Cost = 400
struct.end
QuestItem_USB_Modern_Darkblue : struct.begin {refkey=[0]}
   SID = QuestItem_USB_Modern_Darkblue
   IsQuestItemPrototype = true
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = true
   ShouldTriggerAnomalies = false
   Type = EItemType::Other
   RequireWeight = false
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/IIT_QuestItem_USB_Modern_Darkblue.IIT_QuestItem_USB_Modern_Darkblue'
   MeshPrototypeSID = QuestItem_USB_Modern_Darkblue
   ItemGridWidth = 1
   ItemGridHeight = 1
   Weight = 0.05
   Cost = 500
struct.end
QuestItem_USB_Modern_Black : struct.begin {refkey=[0]}
   SID = QuestItem_USB_Modern_Black
   IsQuestItemPrototype = true
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = true
   ShouldTriggerAnomalies = false
   Type = EItemType::Other
   RequireWeight = false
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/IIT_QuestItem_USB_Modern_Black.IIT_QuestItem_USB_Modern_Black'
   MeshPrototypeSID = QuestItem_USB_Modern_Black
   ItemGridWidth = 1
   ItemGridHeight = 1
   Weight = 0.05
   Cost = 500
struct.end
QuestItem_USB_Modern_White : struct.begin {refkey=[0]}
   SID = QuestItem_USB_Modern_White
   IsQuestItemPrototype = true
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = true
   ShouldTriggerAnomalies = false
   Type = EItemType::Other
   RequireWeight = false
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/IIT_QuestItem_USB_Modern_White.IIT_QuestItem_USB_Modern_White'
   MeshPrototypeSID = QuestItem_USB_Modern_White
   ItemGridWidth = 1
   ItemGridHeight = 1
   Weight = 0.05
   Cost = 500
struct.end
QuestItem_USB_Upgrade : struct.begin {refkey=[0]}
   SID = QuestItem_USB_Upgrade
   IsQuestItemPrototype = true
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = true
   ShouldTriggerAnomalies = false
   Type = EItemType::Other
   RequireWeight = false
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/IIT_QuestItem_USB_Stalker_Big.IIT_QuestItem_USB_Stalker_Big'
   MeshPrototypeSID = QuestItem_USB_Upgrade
   ItemGridWidth = 1
   ItemGridHeight = 1
   Weight = 0.05
   Cost = 700
struct.end
QuestItem_KeyCard_Blue : struct.begin {refkey=[0]}
   SID = QuestItem_KeyCard_Blue
   IsQuestItemPrototype = true
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = true
   ShouldTriggerAnomalies = false
   Type = EItemType::Other
   RequireWeight = false
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/IIT_QuestItem_KeyCard_Blue.IIT_QuestItem_KeyCard_Blue'
   MeshPrototypeSID = QuestItem_KeyCard_Blue
   ItemGridWidth = 1
   ItemGridHeight = 1
   Weight = 0.05
   Cost = 300
struct.end
QuestItem_KeyCard_Green : struct.begin {refkey=[0]}
   SID = QuestItem_KeyCard_Green
   IsQuestItemPrototype = true
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = true
   ShouldTriggerAnomalies = false
   Type = EItemType::Other
   RequireWeight = false
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/IIT_QuestItem_KeyCard_Green.IIT_QuestItem_KeyCard_Green'
   MeshPrototypeSID = QuestItem_KeyCard_Green
   ItemGridWidth = 1
   ItemGridHeight = 1
   Weight = 0.05
   Cost = 600
struct.end
QuestItem_KeyCard_Yellow : struct.begin {refkey=[0]}
   SID = QuestItem_KeyCard_Yellow
   IsQuestItemPrototype = true
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = true
   ShouldTriggerAnomalies = false
   Type = EItemType::Other
   RequireWeight = false
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/IIT_QuestItem_KeyCard_Yellow.IIT_QuestItem_KeyCard_Yellow'
   MeshPrototypeSID = QuestItem_KeyCard_Yellow
   ItemGridWidth = 1
   ItemGridHeight = 1
   Weight = 0.05
   Cost = 900
struct.end
QuestItem_KeyCard_Red : struct.begin {refkey=[0]}
   SID = QuestItem_KeyCard_Red
   IsQuestItemPrototype = true
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = true
   ShouldTriggerAnomalies = false
   Type = EItemType::Other
   RequireWeight = false
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/IIT_QuestItem_KeyCard_Red.IIT_QuestItem_KeyCard_Red'
   MeshPrototypeSID = QuestItem_KeyCard_Red
   ItemGridWidth = 1
   ItemGridHeight = 1
   Weight = 0.05
   Cost = 800
struct.end
QuestItem_Note_A4 : struct.begin {refkey=[0]}
   SID = QuestItem_Note_A4
   IsQuestItemPrototype = true
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = true
   ShouldTriggerAnomalies = false
   Type = EItemType::Other
   RequireWeight = false
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/IIT_QuestItem_Note_A4.IIT_QuestItem_Note_A4'
   MeshPrototypeSID = QuestItem_Note_A4
   ItemGridWidth = 1
   ItemGridHeight = 1
   Weight = 0.05
   Cost = 100
struct.end
QuestItem_Note_Notebook : struct.begin {refkey=[0]}
   SID = QuestItem_Note_Notebook
   IsQuestItemPrototype = true
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = true
   ShouldTriggerAnomalies = false
   Type = EItemType::Other
   RequireWeight = false
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/IIT_QuestItem_Note_Notebook.IIT_QuestItem_Note_Notebook'
   MeshPrototypeSID = QuestItem_Note_Notebook
   ItemGridWidth = 1
   ItemGridHeight = 1
   Weight = 0.05
   Cost = 100
struct.end
QuestItem_Note_Notepad : struct.begin {refkey=[0]}
   SID = QuestItem_Note_Notepad
   IsQuestItemPrototype = true
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = true
   ShouldTriggerAnomalies = false
   Type = EItemType::Other
   RequireWeight = false
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/IIT_QuestItem_Note_Notepad.IIT_QuestItem_Note_Notepad'
   MeshPrototypeSID = QuestItem_Note_Notepad
   ItemGridWidth = 1
   ItemGridHeight = 1
   Weight = 0.05
   Cost = 100
struct.end
QuestItem_Note_Burnt : struct.begin {refkey=[0]}
   SID = QuestItem_Note_Burnt
   IsQuestItemPrototype = true
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = true
   ShouldTriggerAnomalies = false
   Type = EItemType::Other
   RequireWeight = false
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/IIT_QuestItem_Note_Burnt.IIT_QuestItem_Note_Burnt'
   MeshPrototypeSID = QuestItem_Note_Burnt
   ItemGridWidth = 1
   ItemGridHeight = 1
   Weight = 0.05
   Cost = 100
struct.end
QuestItem_Note_Ragged : struct.begin {refkey=[0]}
   SID = QuestItem_Note_Ragged
   IsQuestItemPrototype = true
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = true
   ShouldTriggerAnomalies = false
   Type = EItemType::Other
   RequireWeight = false
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/IIT_QuestItem_Note_Ragged.IIT_QuestItem_Note_Ragged'
   MeshPrototypeSID = QuestItem_Note_Ragged
   ItemGridWidth = 1
   ItemGridHeight = 1
   Weight = 0.05
   Cost = 100
struct.end
QuestItem_Note_BrandNew : struct.begin {refkey=[0]}
   SID = QuestItem_Note_BrandNew
   IsQuestItemPrototype = true
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = true
   ShouldTriggerAnomalies = false
   Type = EItemType::Other
   RequireWeight = false
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/T_inv_QuestItem_note_02.T_inv_QuestItem_note_02'
   MeshPrototypeSID = QuestItem_Note_BrandNew
   ItemGridWidth = 1
   ItemGridHeight = 1
   Weight = 0.05
   Cost = 100
struct.end
QuestItem_Note_Kaimanov : struct.begin {refkey=[0]}
   SID = QuestItem_Note_Kaimanov
   IsQuestItemPrototype = true
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = true
   ShouldTriggerAnomalies = false
   Type = EItemType::Other
   RequireWeight = false
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/T_inv_QuestItem_note_kaimanov.T_inv_QuestItem_note_kaimanov'
   MeshPrototypeSID = QuestItem_Note_Kaimanov
   ItemGridWidth = 1
   ItemGridHeight = 1
   Weight = 0.05
   Cost = 100
struct.end
QuestItem_Folder_Journal : struct.begin {refkey=[0]}
   SID = QuestItem_Folder_Journal
   IsQuestItemPrototype = true
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = true
   ShouldTriggerAnomalies = false
   Type = EItemType::Other
   RequireWeight = false
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/IIT_QuestItem_Folder_Journal.IIT_QuestItem_Folder_Journal'
   MeshPrototypeSID = QuestItem_Folder_Journal
   ItemGridWidth = 1
   ItemGridHeight = 2
   Weight = 0.3
   Cost = 600
struct.end
QuestItem_Folder_Scheme : struct.begin {refkey=[0]}
   SID = QuestItem_Folder_Scheme
   IsQuestItemPrototype = true
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = true
   ShouldTriggerAnomalies = false
   Type = EItemType::Other
   RequireWeight = false
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/IIT_QuestItem_Folder_Scheme.IIT_QuestItem_Folder_Scheme'
   MeshPrototypeSID = QuestItem_Folder_Scheme
   ItemGridWidth = 1
   ItemGridHeight = 2
   Weight = 0.3
   Cost = 600
struct.end
QuestItem_Folder_File : struct.begin {refkey=[0]}
   SID = QuestItem_Folder_File
   IsQuestItemPrototype = true
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = true
   ShouldTriggerAnomalies = false
   Type = EItemType::Other
   RequireWeight = false
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/IIT_QuestItem_Folder_File.IIT_QuestItem_Folder_File'
   MeshPrototypeSID = QuestItem_Folder_File
   ItemGridWidth = 1
   ItemGridHeight = 2
   Weight = 0.3
   Cost = 600
struct.end
QuestItem_Folder_Brown : struct.begin {refkey=[0]}
   SID = QuestItem_Folder_Brown
   IsQuestItemPrototype = true
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = true
   ShouldTriggerAnomalies = false
   Type = EItemType::Other
   RequireWeight = false
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/IIT_QuestItem_Folder_Brown.IIT_QuestItem_Folder_Brown'
   MeshPrototypeSID = QuestItem_Folder_Brown
   ItemGridWidth = 1
   ItemGridHeight = 2
   Weight = 0.3
   Cost = 600
struct.end
QuestItem_Folder_White : struct.begin {refkey=[0]}
   SID = QuestItem_Folder_White
   IsQuestItemPrototype = true
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = true
   ShouldTriggerAnomalies = false
   Type = EItemType::Other
   RequireWeight = false
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/IIT_QuestItem_Folder_White.IIT_QuestItem_Folder_White'
   MeshPrototypeSID = QuestItem_Folder_White
   ItemGridWidth = 1
   ItemGridHeight = 2
   Weight = 0.3
   Cost = 600
struct.end
QuestItem_Folder_Blue : struct.begin {refkey=[0]}
   SID = QuestItem_Folder_Blue
   IsQuestItemPrototype = true
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = true
   ShouldTriggerAnomalies = false
   Type = EItemType::Other
   RequireWeight = false
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/IIT_QuestItem_Folder_Blue.IIT_QuestItem_Folder_Blue'
   MeshPrototypeSID = QuestItem_Folder_Blue
   ItemGridWidth = 1
   ItemGridHeight = 2
   Weight = 0.3
   Cost = 600
struct.end
QuestItem_Key_Chest : struct.begin {refkey=[0]}
   SID = QuestItem_Key_Chest
   IsQuestItemPrototype = true
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = true
   ShouldTriggerAnomalies = false
   Type = EItemType::Other
   RequireWeight = false
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/IIT_QuestItem_Key_Chest.IIT_QuestItem_Key_Chest'
   MeshPrototypeSID = QuestItem_Key_Chest
   ItemGridWidth = 1
   ItemGridHeight = 1
   Weight = 0.05
   Cost = 300
struct.end
QuestItem_Key_Padlock : struct.begin {refkey=[0]}
   SID = QuestItem_Key_Padlock
   IsQuestItemPrototype = true
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = true
   ShouldTriggerAnomalies = false
   Type = EItemType::Other
   RequireWeight = false
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/IIT_QuestItem_Key_PadLock.IIT_QuestItem_Key_PadLock'
   MeshPrototypeSID = QuestItem_Key_Padlock
   ItemGridWidth = 1
   ItemGridHeight = 1
   Weight = 0.05
   Cost = 300
struct.end
QuestItem_Key_DoorOld : struct.begin {refkey=[0]}
   SID = QuestItem_Key_DoorOld
   IsQuestItemPrototype = true
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = true
   ShouldTriggerAnomalies = false
   Type = EItemType::Other
   RequireWeight = false
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/IIT_QuestItem_Key_DoorOld.IIT_QuestItem_Key_DoorOld'
   MeshPrototypeSID = QuestItem_Key_DoorOld
   ItemGridWidth = 1
   ItemGridHeight = 1
   Weight = 0.05
   Cost = 250
struct.end
QuestItem_Key_DoorNew : struct.begin {refkey=[0]}
   SID = QuestItem_Key_DoorNew
   IsQuestItemPrototype = true
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = true
   ShouldTriggerAnomalies = false
   Type = EItemType::Other
   RequireWeight = false
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/IIT_QuestItem_Key_DoorNew.IIT_QuestItem_Key_DoorNew'
   MeshPrototypeSID = QuestItem_Key_DoorNew
   ItemGridWidth = 1
   ItemGridHeight = 1
   Weight = 0.05
struct.end
QuestItem_Collar_N1 : struct.begin {refkey=[0]}
   SID = QuestItem_Collar_N1
   IsQuestItemPrototype = true
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = true
   ShouldTriggerAnomalies = false
   Type = EItemType::Other
   RequireWeight = false
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/IIT_QuestItem_Collar_N1.IIT_QuestItem_Collar_N1'
   MeshPrototypeSID = QuestItem_Collar_N1
   ItemGridWidth = 2
   ItemGridHeight = 1
   Weight = 0.2
   Cost = 1000
struct.end
QuestItem_Collar_N2 : struct.begin {refkey=[0]}
   SID = QuestItem_Collar_N2
   IsQuestItemPrototype = true
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = true
   ShouldTriggerAnomalies = false
   Type = EItemType::Other
   RequireWeight = false
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/IIT_QuestItem_Collar_N2.IIT_QuestItem_Collar_N2'
   MeshPrototypeSID = QuestItem_Collar_N2
   ItemGridWidth = 2
   ItemGridHeight = 1
   Weight = 0.2
   Cost = 480
struct.end
QuestItem_Collar_N3 : struct.begin {refkey=[0]}
   SID = QuestItem_Collar_N3
   IsQuestItemPrototype = true
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = true
   ShouldTriggerAnomalies = false
   Type = EItemType::Other
   RequireWeight = false
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/IIT_QuestItem_Collar_N3.IIT_QuestItem_Collar_N3'
   MeshPrototypeSID = QuestItem_Collar_N3
   ItemGridWidth = 2
   ItemGridHeight = 1
   Weight = 0.2
   Cost = 1000
struct.end
QuestItem_Case_X11 : struct.begin {refkey=[0]}
   SID = QuestItem_Case_X11
   IsQuestItemPrototype = true
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = true
   ShouldTriggerAnomalies = false
   Type = EItemType::Other
   RequireWeight = false
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/T_inv_QuestItem_Case_X11.T_inv_QuestItem_Case_X11'
   MeshPrototypeSID = QuestItem_Case_X11
   ItemGridWidth = 2
   ItemGridHeight = 2
   Weight = 5
   Cost = 2000
struct.end
QuestItem_Case_Blue : struct.begin {refkey=[0]}
   SID = QuestItem_Case_Blue
   IsQuestItemPrototype = true
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = true
   ShouldTriggerAnomalies = false
   Type = EItemType::Other
   RequireWeight = false
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/T_inv_QuestItem_Case_Blue.T_inv_QuestItem_Case_Blue'
   MeshPrototypeSID = QuestItem_Case_Blue
   ItemGridWidth = 2
   ItemGridHeight = 2
   Weight = 4
   Cost = 1600
struct.end
QuestItem_Case_Mil : struct.begin {refkey=[0]}
   SID = QuestItem_Case_Mil
   IsQuestItemPrototype = true
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = true
   ShouldTriggerAnomalies = false
   Type = EItemType::Other
   RequireWeight = false
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/T_inv_QuestItem_Case_Mil.T_inv_QuestItem_Case_Mil'
   MeshPrototypeSID = QuestItem_Case_Mil
   ItemGridWidth = 2
   ItemGridHeight = 2
   Weight = 5
   Cost = 2000
struct.end
QuestItem_Case_Nato : struct.begin {refkey=[0]}
   SID = QuestItem_Case_Nato
   IsQuestItemPrototype = true
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = true
   ShouldTriggerAnomalies = false
   Type = EItemType::Other
   RequireWeight = false
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/T_inv_QuestItem_Case_Nato.T_inv_QuestItem_Case_Nato'
   MeshPrototypeSID = QuestItem_Case_Nato
   ItemGridWidth = 2
   ItemGridHeight = 2
   Weight = 5
   Cost = 2000
struct.end
QuestItem_Case_Sci : struct.begin {refkey=[0]}
   SID = QuestItem_Case_Sci
   IsQuestItemPrototype = true
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = true
   ShouldTriggerAnomalies = false
   Type = EItemType::Other
   RequireWeight = false
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/T_inv_QuestItem_Case_Sci.T_inv_QuestItem_Case_Sci'
   MeshPrototypeSID = QuestItem_Case_Sci
   ItemGridWidth = 2
   ItemGridHeight = 2
   Weight = 5
   Cost = 2000
struct.end
QuestItem_Case_Diplomat : struct.begin {refkey=[0]}
   SID = QuestItem_Case_Diplomat
   IsQuestItemPrototype = true
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = true
   ShouldTriggerAnomalies = false
   Type = EItemType::Other
   RequireWeight = false
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/IIT_QuestItem_Case_diplomat.IIT_QuestItem_Case_diplomat'
   MeshPrototypeSID = QuestItem_Case_Diplomat
   ItemGridWidth = 2
   ItemGridHeight = 1
   Weight = 3
   Cost = 2000
struct.end
QuestItem_Fuse_Low : struct.begin {refkey=[0]}
   SID = QuestItem_Fuse_Low
   IsQuestItemPrototype = true
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = true
   ShouldTriggerAnomalies = false
   Type = EItemType::Other
   RequireWeight = false
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/T_inv_electric_fuse_01_white.T_inv_electric_fuse_01_white'
   MeshPrototypeSID = QuestItem_Fuse_Low
   ItemGridWidth = 1
   ItemGridHeight = 2
   Weight = 0.3
   Cost = 300
struct.end
QuestItem_Fuse_Mid : struct.begin {refkey=[0]}
   SID = QuestItem_Fuse_Mid
   IsQuestItemPrototype = true
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = true
   ShouldTriggerAnomalies = false
   Type = EItemType::Other
   RequireWeight = false
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/T_inv_electric_fuse_01_blue.T_inv_electric_fuse_01_blue'
   MeshPrototypeSID = QuestItem_Fuse_Mid
   ItemGridWidth = 1
   ItemGridHeight = 2
   Weight = 0.5
   Cost = 1500
struct.end
QuestItem_Fuse_High : struct.begin {refkey=[0]}
   SID = QuestItem_Fuse_High
   IsQuestItemPrototype = true
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = true
   ShouldTriggerAnomalies = false
   Type = EItemType::Other
   RequireWeight = false
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/T_inv_electric_fuse_01_red.T_inv_electric_fuse_01_red'
   MeshPrototypeSID = QuestItem_Fuse_High
   ItemGridWidth = 1
   ItemGridHeight = 2
   Weight = 0.7
   Cost = 4500
struct.end
QuestItem_Tubus : struct.begin {refkey=[0]}
   SID = QuestItem_Tubus
   IsQuestItemPrototype = true
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = true
   ShouldTriggerAnomalies = false
   Type = EItemType::Other
   RequireWeight = false
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/T_inv_QuestItem_Tubus.T_inv_QuestItem_Tubus'
   MeshPrototypeSID = QuestItem_Tubus
   ItemGridWidth = 1
   ItemGridHeight = 3
   Weight = 2
   Cost = 2000
struct.end
SuppressorDevice : struct.begin {refkey=[0]}
   SID = SuppressorDevice
   MeshPrototypeSID = Bandage
struct.end
RooseveltPDA : struct.begin {refkey=BasePDA_Duty}
   SID = RooseveltPDA
   Weight = 0.2
   Cost = 350
struct.end
ShahPDA : struct.begin {refkey=BasePDA_Freedom}
   SID = ShahPDA
   Weight = 0.2
   Cost = 350
struct.end
VaranPDA : struct.begin {refkey=BasePDA_Bandits}
   SID = VaranPDA
   Weight = 0.2
   Cost = 350
struct.end
StrangePDA : struct.begin {refkey=[0]}
   SID = StrangePDA
   IsQuestItemPrototype = true
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = true
   ShouldTriggerAnomalies = false
   Type = EItemType::Other
   RequireWeight = false
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/IIT_pda_MonolithBroken.IIT_pda_MonolithBroken'
   ItemGridWidth = 2
   ItemGridHeight = 1
   MeshPrototypeSID = BasePDA_MonolithBroken
   Weight = 0.2
   Cost = 500
struct.end
Icon : struct.begin {refkey=[0]}
   SID = Icon
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/IIT_QuestItem_Icona.IIT_QuestItem_Icona'
   MeshPrototypeSID = Icon
   ItemGridWidth = 2
   ItemGridHeight = 2
   IsQuestItem = true
   Weight = 0.7
   Cost = 5000
struct.end
KeshaPDA : struct.begin {refkey=BasePDA}
   SID = KeshaPDA
struct.end
PripoyPDA : struct.begin {refkey=BasePDA_Neutrals}
   SID = PripoyPDA
struct.end
Electrocollar : struct.begin {refkey=QuestItem_Collar_N2}
   SID = Electrocollar
   IsQuestItemPrototype = true
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = false
   ShouldTriggerAnomalies = false
   Type = EItemType::Other
   RequireWeight = false
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/IIT_QuestItem_Collar_N2.IIT_QuestItem_Collar_N2'
   MeshPrototypeSID = QuestItem_Collar_N2
   ItemGridWidth = 2
   ItemGridHeight = 1
   Cost = 480
   Weight = 0.2
struct.end
Electrocollar_Blood : struct.begin {refkey=QuestItem_Collar_N3}
   SID = Electrocollar
struct.end
FaustData : struct.begin {refkey=[0]}
   SID = FaustData
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/IIT_QuestItem_faust_disk.IIT_QuestItem_faust_disk'
   MeshPrototypeSID = FaustData
   ItemGridWidth = 1
   ItemGridHeight = 1
   Cost = 5000
   Weight = 0.1
   IsQuestItem = true
struct.end
DvupalovVodka : struct.begin {refurl=ConsumablePrototypes.cfg;refkey=Vodka}
   SID = DvupalovVodka
   Cost = 500
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/IIT_DvupalovVodka.IIT_DvupalovVodka'
   ItemGridWidth = 1
   ItemGridHeight = 2
   IsQuestItemPrototype = true
   MeshPrototypeSID = DvupalovVodka
   EffectPrototypeSIDs : struct.begin
      [0] = MagicVodkaDrunkness
	  [1] = VodkaSatiety1
	  [2] = MagicVodkaPSYInstaDecrease
	  [3] = MagicVodkaPSYProtection
   struct.end
   ShouldShowEffects : struct.begin
      [0] = false
      [1] = true
	  [2] = false
	  [3] = true
   struct.end
      EffectsDisplayTypes : struct.begin
      [0] = EEffectDisplayType::Value
      [1] = EEffectDisplayType::Value
      [2] = EEffectDisplayType::Value
	  [3] = EEffectDisplayType::ValueAndTime
	struct.end
struct.end
KuziaPDA : struct.begin {refkey=BasePDA_Bandits}
   SID = KuziaPDA
struct.end
ZhukovskyPDA : struct.begin {refkey=BasePDA_Duty}
   SID = ZhukovskyPDA
   IsQuestItem = false
struct.end
FaustPDA : struct.begin {refkey=BasePDA_Monolith}
   SID = FaustPDA
   IsQuestItem = false
struct.end
E03_01_ChernozemPDA : struct.begin {refkey=BasePDA_Bandits}
   SID = E03_01_ChernozemPDA
struct.end
E03_02_OldTechDocs_X18 : struct.begin {refkey=QuestItem_Folder_Scheme}
   SID = E03_02_OldTechDocs_X18
struct.end
E03_05_NestorNote : struct.begin {refkey=[0]}
   SID = E03_05_NestorNote
   IsQuestItemPrototype = true
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = true
   ShouldTriggerAnomalies = false
   Type = EItemType::Other
   RequireWeight = false
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/IIT_QuestItem_Notepad_OldDiary.IIT_QuestItem_Notepad_OldDiary'
   MeshPrototypeSID = QuestItem_Notepad_OldDiary
   ItemGridWidth = 1
   ItemGridHeight = 2
   Weight = 0.1
   Cost = 400
struct.end
E03_05_NestorPass : struct.begin {refkey=QuestItem_KeyCard_Blue}
   SID = E03_05_NestorPass
struct.end
MalahitElevatorKey : struct.begin {refkey=QuestItem_KeyCard_Green}
   SID = MalahitElevatorKey
struct.end
LeshiyPDA : struct.begin {refkey=BasePDA_Bandits}
   SID = LeshiyPDA
struct.end
AzimutControlRoomKey : struct.begin {refkey=QuestItem_KeyCard_Green}
   SID = AzimutControlRoomKey
   IsQuestItem = true
struct.end
KozimkovPDA : struct.begin {refkey=BasePDA_Ward}
   SID = KozimkovPDA
struct.end
E06_MQ03_DalinData : struct.begin {refkey=BasePDA}
   SID = E06_MQ03_DalinData
   IsQuestItem = true
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/IIT_QuestItem_USB_nii.IIT_QuestItem_USB_nii'
   ItemGridWidth = 1
   ItemGridHeight = 1
   MeshPrototypeSID = E06_MQ03_DalinData
struct.end
MaksSubbotaPDA : struct.begin {refkey=BasePDA_Neutrals}
   SID = MaksSubbotaPDA
struct.end
DevatyjPDA : struct.begin {refkey=BasePDA}
   SID = DevatyjPDA
struct.end
RSQ01_WarlockPackage : struct.begin {refkey=QuestItem_Folder_Brown}
   SID = RSQ01_WarlockPackage
   IsQuestItem = true
struct.end
BordulinPDA : struct.begin {refkey=BasePDA_Duty}
   SID = BordulinPDA
struct.end
MuhaPDA : struct.begin {refkey=BasePDA_Bandits}
   SID = MuhaPDA
struct.end
EQ65LosPDA : struct.begin {refkey=BasePDA_Neutrals}
   SID = EQ65LosPDA
   IsQuestItem = false
struct.end
EQ65PiavkaPDA : struct.begin {refkey=BasePDA_Neutrals}
   SID = EQ65PiavkaPDA
   IsQuestItem = false
struct.end
EQ67UraKotPDA : struct.begin {refkey=BasePDA_Freedom}
   SID = EQ67UraKotPDA
struct.end
EQ84_LotPDA : struct.begin {refkey=BasePDA_Neutrals}
   SID = EQ84_LotPDA
   IsQuestItem = false
struct.end
PomorPDA : struct.begin {refkey=BasePDA_Neutrals}
   SID = PomorPDA
struct.end
EQ70_DeadBodyPda : struct.begin {refkey=BasePDA_Neutrals}
   SID = EQ70_DeadBodyPda
struct.end
EQ85_MelPDA : struct.begin {refkey=BasePDA_Neutrals}
   SID = EQ85_MelPDA
   IsQuestItem = false
struct.end
EQ48_GiverPaper : struct.begin {refkey=QuestItem_Note_Notebook}
   SID = EQ48_GiverPaper
struct.end
EQ110_DokaPDA : struct.begin {refkey=BasePDA_Neutrals}
   SID = EQ110_DokaPDA
   IsQuestItem = false
struct.end
Zalesie_BatyaPDA : struct.begin {refkey=BasePDA_Neutrals}
   SID = Zalesie_BatyaPDA
   IsQuestItem = false
struct.end
Zalesie_KoldunPDA : struct.begin {refkey=BasePDA_Neutrals}
   SID = Zalesie_KoldunPDA
   IsQuestItem = false
struct.end
Zalesie_LenaPDA : struct.begin {refkey=BasePDA_Neutrals}
   SID = Zalesie_LenaPDA
   IsQuestItem = false
struct.end
Zalesie_HomakPDA : struct.begin {refkey=BasePDA_Neutrals}
   SID = Zalesie_HomakPDA
   IsQuestItem = false
struct.end
Zalesie_NikolaichPDA : struct.begin {refkey=BasePDA_Neutrals}
   SID = Zalesie_NikolaichPDA
   IsQuestItem = false
struct.end
Zalesie_LinzaPDA : struct.begin {refkey=BasePDA_Neutrals}
   SID = Zalesie_LinzaPDA
   IsQuestItem = false
struct.end
Terricon_SulcPDA : struct.begin {refkey=BasePDA}
   SID = Terricon_SulcPDA
   MeshPrototypeSID = Medkit
struct.end
Terricon_KonderPDA : struct.begin {refkey=BasePDA}
   SID = Terricon_KonderPDA
   MeshPrototypeSID = Medkit
struct.end
Terricon_DrabadanPDA : struct.begin {refkey=BasePDA}
   SID = Terricon_DrabadanPDA
   MeshPrototypeSID = Medkit
struct.end
Terricon_KukuhaPDA : struct.begin {refkey=BasePDA}
   SID = Terricon_KukuhaPDA
   MeshPrototypeSID = Medkit
struct.end
Terricon_GuronPDA : struct.begin {refkey=BasePDA}
   SID = Terricon_GuronPDA
   MeshPrototypeSID = Medkit
struct.end
EQ64_MakisPDA : struct.begin {refkey=BasePDA}
   SID = EQ64_MakisPDA
struct.end
sid_items_E02_SQ01_BanditPDA : struct.begin {refkey=BasePDA_Bandits}
   SID = sid_items_E02_SQ01_BanditPDA
   IsQuestItem = false
struct.end
EQ16_FaraPDA : struct.begin {refkey=BasePDA_Neutrals}
   SID = EQ16_FaraPDA
struct.end
EQ73_EdikBaskaPDA : struct.begin {refkey=BasePDA_Bandits}
   SID = EQ73_EdikBaskaPDA
struct.end
RSQ04_C05_FuelCan : struct.begin {refkey=QuestItem_Case_Blue}
   SID = RSQ04_C05_FuelCan
   IsQuestItem = true
struct.end
SQ47_LevaBorzoj_PDA : struct.begin {refkey=BasePDA_Bandits}
   SID = SQ47_LevaBorzoj_PDA
struct.end
SQ13_PDA_Budnik : struct.begin {refkey=BasePDA_Ward}
   SID = SQ13_PDA_Budnik
   IsQuestItem = true
struct.end
SQ13_Soul : struct.begin {refurl=ArtifactPrototypes.cfg;refkey=EArtifactSoul}
   SID = SQ13_Soul
   IsQuestItemPrototype = true
   IsQuestItem = true
struct.end
SQ04_SoloveiPDA : struct.begin {refkey=BasePDA_Neutrals}
   SID = SQ04_SoloveiPDA
struct.end
E02_SQ01_RabinaPDA : struct.begin {refkey=BasePDA_Neutrals}
   SID = E02_SQ01_RabinaPDA
struct.end
EQ38_Instruction : struct.begin {refkey=QuestItem_Note_Notepad}
   SID = EQ38_Instruction
   IsQuestItem = false
struct.end
RSQ05_C03_Supplies : struct.begin {refkey=QuestItem_Notepad_Officer}
   SID = RSQ05_C03_Supplies
struct.end
RSQ05_C01_FlashDrive : struct.begin {refkey=QuestItem_Case_Diplomat}
   SID = RSQ05_C01_FlashDrive
   IsQuestItem = true
struct.end
Terricon_NestorPDA : struct.begin {refkey=BasePDA}
   SID = Terricon_NestorPDA
struct.end
Terricon_SickStalkerPDA : struct.begin {refkey=BasePDA}
   SID = Terricon_SickStalkerPDA
struct.end
E02_MQ03_VartaSensors : struct.begin {refkey=[0]}
   SID = E02_MQ03_VartaSensors
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/T_inv_VartaSensors.T_inv_VartaSensors'
   ItemGridWidth = 1
   ItemGridHeight = 1
   Weight = 0.1
   IsQuestItem = true
   Cost = 1000
struct.end
E02_MQ03_VartaPDA : struct.begin {refkey=BasePDA_Ward}
   SID = E02_MQ03_VartaPDA
struct.end
E02_MQ02_BS_PDA : struct.begin {refkey=BasePDA_Bandits}
   SID = E02_MQ02_BS_PDA
struct.end
E02_SQ01_ZorikPDA : struct.begin {refkey=BasePDA_Neutrals}
   SID = E02_SQ01_ZorikPDA
   IsQuestItem = false
struct.end
EQ30_DobryakPDA : struct.begin {refkey=BasePDA_Neutrals}
   SID = EQ30_DobryakPDA
struct.end
EQ30_ReshkaPDA : struct.begin {refkey=BasePDA_Neutrals}
   SID = EQ30_ReshkaPDA
struct.end
EQ30_TitunPDA : struct.begin {refkey=BasePDA_Bandits}
   SID = EQ30_TitunPDA
struct.end
E03_MQ02_ZmeevikPDA : struct.begin {refkey=BasePDA_Spark}
   SID = E03_MQ02_ZmeevikPDA
struct.end
E03_MQ02_IskraPDA : struct.begin {refkey=BasePDA_Spark}
   SID = E03_MQ02_IskraPDA
struct.end
E03_MQ05_MalojPDA : struct.begin {refkey=BasePDA}
   SID = E03_MQ05_MalojPDA
struct.end
SQ01_ValenokPDA : struct.begin {refkey=BasePDA_Neutrals}
   SID = SQ01_ValenokPDA
struct.end
E03_MQ02_IsolatorKeys : struct.begin {refkey=QuestItem_Key_Chest}
   SID = E03_MQ02_IsolatorKeys
struct.end
RSQ06_C04_Goods : struct.begin {refkey=QuestItem_Case_Diplomat}
   SID = RSQ06_C04_Goods
   IsQuestItem = true
struct.end
SQ05_GuronsGoods : struct.begin {refkey=QuestItem_Case_Blue}
   SID = SQ05_GuronsGoods
struct.end
SQ02_PomorKey : struct.begin {refkey=QuestItem_Key_DoorOld}
   SID = SQ02_PomorKey
struct.end
E02_MQ03_RihterNorthKey : struct.begin {refkey=QuestItem_Key_DoorNew}
   SID = E02_MQ03_RihterNorthKey
struct.end
SQ47_DavidAkopan_PDA : struct.begin {refkey=BasePDA_Neutrals}
   SID = SQ47_DavidAkopan_PDA
struct.end
E06_MQ02_CryptoKey : struct.begin {refkey=[0]}
   SID = E06_MQ01_CryptoKey
   IsQuestItemPrototype = true
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = true
   ShouldTriggerAnomalies = false
   Type = EItemType::Other
   RequireWeight = false
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/IIT_QuestItem_Key_DoorNew.IIT_QuestItem_Key_DoorNew'
   MeshPrototypeSID = QuestItem_Key_DoorNew
   ItemGridWidth = 1
   ItemGridHeight = 1
   Weight = 0.05
   Cost = 400
struct.end
EQ92_TunnelPDA : struct.begin {refkey=BasePDA_Neutrals}
   SID = EQ92_TunnelPDA
struct.end
E07_MQ01_HorsPDA : struct.begin {refkey=BasePDA_Monolith}
   SID = E07_MQ01_HorsPDA
   MeshPrototypeSID = BasePDA
struct.end
E07_PsyEmitter : struct.begin {refkey=[0]}
   SID = E07_PsyEmitter
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/IIT_QuestItem_emitter.IIT_QuestItem_emitter'
   MeshPrototypeSID = E07_PsyEmitter
   ItemGridWidth = 2
   ItemGridHeight = 2
   IsQuestItem = true
   Weight = 2
   Cost = 6000
struct.end
E07_MQ01_Fuse : struct.begin {refkey=QuestItem_Fuse_High}
   SID = E07_MQ01_Fuse
struct.end
VartaDogtag : struct.begin {refkey=[0]}
   SID = VartaDogtag
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/T_inv_VartaDogtag.T_inv_VartaDogtag'
   MeshPrototypeSID = QuestDocuments
   ItemGridWidth = 1
   ItemGridHeight = 1
   Weight = 0.01
   IsQuestItem = true
   Cost = 5000
struct.end
NestorUSB : struct.begin {refkey=QuestItem_USB_Stalker_Blue}
   SID = NestorUSB
struct.end
EQ74_JitnichenkoPDA : struct.begin {refkey=BasePDA}
   SID = EQ74_JitnichenkoPDA
struct.end
EQ36_KucherPDA : struct.begin {refkey=BasePDA_Neutrals}
   SID = EQ36_KucherPDA
   IsQuestItem = false
struct.end
EQ109_VitekLunaPDA : struct.begin {refkey=BasePDA_Bandits}
   SID = EQ109_VitekLunaPDA
   IsQuestItem = false
struct.end
EQ109_MarikTopotPDA : struct.begin {refkey=BasePDA_Neutrals}
   SID = EQ109_MarikTopotPDA
   IsQuestItem = false
struct.end
EQ140_IluhaVorobejPDA : struct.begin {refkey=BasePDA_Neutrals}
   SID = EQ140_IluhaVorobejPDA
   IsQuestItem = false
struct.end
EQ110_HermitPDA : struct.begin {refkey=QuestItem_Note_Notepad}
   SID = EQ110_HermitPDA
   IsQuestItem = false
struct.end
E03_MQ05_BanditPDA : struct.begin {refkey=BasePDA_Bandits}
   SID = E03_MQ05_BanditPDA 
struct.end
EQ68_KubrakPDA : struct.begin {refkey=BasePDA_Ward}
   SID = EQ68_KubrakPDA
   IsQuestItem = false
struct.end
EQ111_KorkaPDA : struct.begin {refkey=BasePDA_Freedom}
   SID = EQ111_KorkaPDA
   IsQuestItem = false
struct.end
EQ141_TurgaPDA : struct.begin {refkey=BasePDA_Neutrals}
   SID = EQ141_TurgaPDA
   IsQuestItem = false
struct.end
E03_MQ04_Key : struct.begin {refkey=QuestItem_Key_Chest}
   SID = E03_MQ04_Key
struct.end
E03_MQ01_GoshaMogilaPDA : struct.begin {refkey=BasePDA_Bandits}
   SID = E03_MQ01_GoshaMogilaPDA
struct.end
E05_MQ03_NimblePDA : struct.begin {refkey=BasePDA_Neutrals}
   SID = E05_MQ03_NimblePDA
struct.end
E05_MQ03_KalanchaFlashDisk : struct.begin {refkey=QuestItem_USB_Modern_Darkblue}
   SID = E05_MQ03_KalanchaFlashDisk
   IsQuestItem = true
struct.end
E05_SQ04_GunParts : struct.begin {refkey=QuestItem_Case_Mil}
   SID = E05_SQ04_GunParts
struct.end
E05_MQ03_KalanchaDocuments : struct.begin {refkey=QuestItem_Folder_Journal}
   SID = E05_MQ03_KalanchaDocuments
   IsQuestItem = false
struct.end
EQ13_FilimonPDA : struct.begin {refkey=BasePDA_Freedom}
   SID = EQ13_FilimonPDA
struct.end
E05_SQ03_Parts : struct.begin {refkey=QuestItem_Case_Sci}
   SID = E05_SQ03_Parts
struct.end
SQ18_KamysPaperNote : struct.begin {refkey=QuestItem_Note_A4}
   SID = SQ18_KamysPaperNote
struct.end
SQ18_KamysPDA : struct.begin {refkey=BasePDA_Bandits}
   SID = SQ18_KamysPDA
struct.end
SQ50_SultanSuitcase : struct.begin {refkey=QuestItem_Case_X11}
   SID = SQ50_SultanSuitcase
   IsQuestItem = true
struct.end
krivenko_full_flashdrive_05_05 : struct.begin {refkey=[0]}
   SID = krivenko_full_flashdrive_05_05
   IsQuestItem = true
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/IIT_QuestItem_USB_nii.IIT_QuestItem_USB_nii'
   ItemGridWidth = 1
   ItemGridHeight = 1
   MeshPrototypeSID = E06_MQ03_DalinData
   Cost = 320
   Weight = 0.2
struct.end
krivenko_flashdrive_05_05 : struct.begin {refkey=[0]}
   SID = krivenko_flashdrive_05_05
   IsQuestItem = true
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/IIT_QuestItem_USB_nii.IIT_QuestItem_USB_nii'
   ItemGridWidth = 1
   ItemGridHeight = 1
   MeshPrototypeSID = E06_MQ03_DalinData
   Cost = 250
   Weight = 0.2
struct.end
psilamp_part_05_05 : struct.begin {refkey=[0]}
   SID = psilamp_part_05_05
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/T_inv_scanner_topaz_core.T_inv_scanner_topaz_core'
   MeshPrototypeSID = psilamp_part_05_05
   ItemGridWidth = 1
   ItemGridHeight = 1
   Cost = 1000
   Weight = 0.5
struct.end
E05_MQ02_ZveroboyPDA : struct.begin {refkey=BasePDA_Neutrals}
   SID = E05_MQ02_ZveroboyPDA
struct.end
E05_SQ04_LapaPDA : struct.begin {refkey=BasePDA_Neutrals}
   SID = E05_SQ04_LapaPDA
struct.end
EQ143_KolubPDA : struct.begin {refkey=BasePDA_Freedom}
   SID = EQ143_KolubPDA
   IsQuestItem = false
struct.end
EQ11_NortonPDA : struct.begin {refkey=BasePDA_Freedom}
   SID = EQ11_NortonPDA
struct.end
NestorPDA : struct.begin {refkey=BasePDA}
   SID = NestorPDA
struct.end
EQ37_GromNote : struct.begin {refkey=QuestItem_Note_Ragged}
   SID = EQ37_GromNote
   IsQuestItem = false
struct.end
EQ29_TradeNote_Physical : struct.begin {refkey=QuestItem_Note_Notepad}
   SID = EQ29_TradeNote_Physical
   IsQuestItem = false
struct.end
E04_MQ02_BasementKey : struct.begin {refkey=QuestItem_Key_DoorOld}
   SID = E04_MQ02_BasementKey
struct.end
E04_SQ01_PDAStalker : struct.begin {refkey=BasePDA_Bandits}
   SID = E04_SQ01_PDAStalker
struct.end
E04_SQ01_LodochkaContainer : struct.begin {refkey=QuestItem_Case_Diplomat}
   SID = E04_SQ01_LodochkaContainer
struct.end
SQ10_JumperPDA : struct.begin {refkey=BasePDA_Monolith}
   SID = SQ10_JumperPDA
struct.end
SQ10_HogPDA : struct.begin {refkey=BasePDA_Mercs}
   SID = SQ10_HogPDA
struct.end
SQ10_BunchOfKeysSPO : struct.begin {refkey=QuestItem_Key_Chest}
   SID = SQ10_BunchOfKeysSPO
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/T_inv_BunchOfKeysSPO.T_inv_BunchOfKeysSPO'
   ItemGridWidth = 1
   ItemGridHeight = 1
   Cost = 120
struct.end
SQ10_TihijMonolithStashNote : struct.begin {refkey=QuestItem_Note_Notebook}
   SID = SQ10_TihijMonolithStashNote
struct.end
E04_MQ02_Recorder : struct.begin {refkey=QuestItem_Recorder_Base}
   SID = E04_MQ02_Recorder
struct.end
EQ144_KucyjPDA : struct.begin {refkey=BasePDA_Neutrals}
   SID = EQ144_KucyjPDA
   IsQuestItem = false
struct.end
ANCQ06_VadyaPDA : struct.begin {refkey=BasePDA_Neutrals}
   SID = ANCQ06_VadyaPDA
   IsQuestItem = false
struct.end
ANCQ07_RabinaPDA : struct.begin {refkey=BasePDA_Neutrals}
   SID = ANCQ07_RabinaPDA
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = false
struct.end
ANCQ08_NoteToHomyak : struct.begin {refkey=QuestItem_Note_Ragged}
   SID = ANCQ08_NoteToHomyak
   IsQuestItem = false
struct.end
ANCQ12_Note : struct.begin {refkey=QuestItem_Note_Ragged}
   SID = ANCQ12_Note
   IsQuestItem = false
struct.end
ANCQ13_PDAVladAsnyj : struct.begin {refkey=BasePDA_Neutrals}
   SID = ANCQ13_PDAVladAsnyj
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = false
struct.end
EQ51_TemaJetPDA : struct.begin {refkey=BasePDA_Duty}
   SID = EQ51_TemaJetPDA
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = false
struct.end
E04_MQ02_PDAWithAudiolog : struct.begin {refkey=BasePDA_Ward}
   SID = E04_MQ02_PDAWithAudiolog
   IsQuestItem = false
struct.end
E02_MQ03_RebraPDA_MSOP : struct.begin {refkey=BasePDA_Military}
   SID = E02_MQ03_RebraPDA_MSOP
   IsQuestItem = false
struct.end
E02_MQ03_RebraSphereKey : struct.begin {refkey=QuestItem_KeyCard_Yellow}
   SID = E02_MQ03_RebraSphereKey
   IsQuestItem = false
struct.end
EQ52_PuzirPDA : struct.begin {refkey=BasePDA_Bandits}
   SID = EQ52_PuzirPDA
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = false
struct.end
EQ35_LehaLegendPDA : struct.begin {refkey=BasePDA_Neutrals}
   SID = EQ35_LehaLegendPDA
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = false
struct.end
EQ35_VolanNoteSheet : struct.begin {refkey=QuestItem_Note_Notepad}
   SID = EQ35_VolanNoteSheet
   IsQuestItem = false
struct.end
EQ26_LevsaPDA : struct.begin {refkey=BasePDA_Neutrals}
   SID = EQ26_LevsaPDA
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = false
struct.end
EQ58_TimurMolcanovPDA : struct.begin {refkey=BasePDA_Freedom}
   SID = EQ58_TimurMolcanovPDA
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = false
struct.end
SQ10_SeverNoteDubniy : struct.begin {refkey=QuestItem_Note_Notepad}
   SID = SQ10_SeverNoteDubniy
   IsQuestItem = false
struct.end
EQ38_ThanksNote : struct.begin {refkey=QuestItem_Note_Ragged}
   SID = EQ38_ThanksNote
   IsQuestItem = false
struct.end
E08_MQ03_SuppressorDocs : struct.begin {refkey=QuestItem_Folder_Scheme}
   SID = E08_MQ03_SuppressorDocs
   IsQuestItem = true
struct.end
E08_MQ03_KeycardLabX5 : struct.begin {refkey=QuestItem_KeyCard_Blue}
   SID = E08_MQ03_KeycardLabX5
   IsQuestItem = true
struct.end
QuestArtifactCrystalThorn : struct.begin {refurl=ArtifactPrototypes.cfg;refkey=CArtifactCrystalThorn}
   SID = QuestArtifactCrystalThorn
   Name = QuestArtifactCrystalThorn
   JumpDistance = 20000.0
   JumpAmount = 999
   JumpDelay = 0.5
   JumpSeriesDelay = 0.5
   JumpHeight = 150.0
   JumpForce = 20.0
   JumpSpeedCoef = 1.5
   LandingForce = 300.0
   LifeTime = 3600.0
   PlayerDistance = 100000.0
   ReturnDistanceValue = 100000.0
   DetectorRequired = false
   IsQuestItem = true
   IsQuestItemPrototype = true
struct.end
EQ13_MihaPDA : struct.begin {refkey=BasePDA_Neutrals}
   SID = EQ13_MihaPDA
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = false
struct.end
EQ118_DeadIskraPDA : struct.begin {refkey=BasePDA_Spark}
   SID = EQ118_DeadIskraPDA
   IsQuestItem = false
struct.end
SQ86_SashkaBitokPDA : struct.begin {refkey=BasePDA_Neutrals}
   SID = SQ86_SashkaBitokPDA
   IsQuestItem = true
struct.end
E07_MQ02_PripoyKey : struct.begin {refkey=QuestItem_Key_DoorNew}
   SID = E07_MQ02_PripoyKey
   IsQuestItem = true
struct.end
E05_SQ01_VartaPatrolRoute : struct.begin {refkey=QuestItem_Note_A4}
   SID = E05_SQ01_VartaPatrolRoute
   IsQuestItem = false
struct.end
E05_MQ03_LebedevAudiolog : struct.begin {refkey=BasePDA}
   SID = E05_MQ03_LebedevAudiolog
   IsQuestItem = false
struct.end
E05_MQ03_NimbleDiary: struct.begin {refkey=QuestItem_Note_Notebook}
   SID = E05_MQ03_NimbleDiary
   IsQuestItem = false
struct.end
E05_MQ01_ShterevPDA : struct.begin {refkey=BasePDA_Ward}
   SID = E05_MQ01_ShterevPDA
   IsQuestItem = true
struct.end
E05_MQ01_VartaSensors : struct.begin {refkey=E02_MQ03_VartaSensors}
   SID = E05_MQ01_VartaSensors
   IsQuestItem = true
struct.end
EQ145KostaKonusNote : struct.begin {refkey=QuestItem_Notepad_Leather}
   SID = EQ145KostaKonusNote
   IsQuestItem = false
struct.end
E07_MQ03_ControlEmitter : struct.begin {refkey=E07_PsyEmitter}
   SID = E07_MQ03_ControlEmitter
   IsQuestItem = true
struct.end
E05_MQ01_EchoReport : struct.begin {refkey=QuestItem_Folder_Blue}
   SID = E05_MQ01_EchoReport
   IsQuestItem = false
struct.end
E05_MQ01_ShterevDiary : struct.begin {refkey=[0]}
   SID = E05_MQ01_ShterevDiary
   IsQuestItemPrototype = true
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = true
   ShouldTriggerAnomalies = false
   Type = EItemType::Other
   RequireWeight = false
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/IIT_QuestItem_Notepad_Office.IIT_QuestItem_Notepad_Office'
   MeshPrototypeSID = QuestItem_Notepad_Officer
   ItemGridWidth = 1
   ItemGridHeight = 2
   Weight = 0.2
   Cost = 160
struct.end
SQ10_DubniyPDA : struct.begin {refkey=BasePDA_Monolith}
   SID = SQ10_DubniyPDA
   IsQuestItem = false
struct.end
E04_SQ02_KvaskaPDA : struct.begin {refkey=BasePDA_Monolith}
   SID = E04_SQ02_KvaskaPDA
   IsQuestItem = true
struct.end
SQ06_PsiLamp : struct.begin {refkey=[0]}
   SID = SQ06_PsiLamp
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/T_inv_needrename_4.T_inv_needrename_4'
   MeshPrototypeSID = QuestItem_MonolithLamp
   ItemGridWidth = 2
   ItemGridHeight = 3
   IsQuestItem = true
   Cost = 6000
   Weight = 6
struct.end
SQ06_PsiLampDestroyed : struct.begin {refkey=[0]}
   SID = SQ06_PsiLampDestroyed
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/T_inv_needrename_6.T_inv_needrename_6'
   MeshPrototypeSID = QuestItem_MonolithLamp_Broken
   ItemGridWidth = 2
   ItemGridHeight = 3
   IsQuestItem = true
   Cost = 4000
   Weight = 5.20
struct.end
SQ06_MSOPAudiolog : struct.begin {refkey=QuestItem_Recorder_Base}
   SID = SQ06_MSOPAudiolog
   IsQuestItem = false
struct.end
SQ06_CargoNote : struct.begin {refkey=QuestItem_Note_A4}
   SID = SQ06_CargoNote
   IsQuestItemPrototype = true
   IsQuestItem = false
struct.end
EQ150_NoteOtshelnik : struct.begin {refkey=QuestItem_Note_Ragged}
   SID = EQ150_NoteOtshelnik
   IsQuestItem = false
struct.end
EQ60_PDAVovchik : struct.begin {refkey=BasePDA_Neutrals}
   SID = EQ60_PDAVovchik
   IsQuestItem = false
struct.end
ANCQ01_VadaHvorostPDA : struct.begin {refkey=BasePDA_Neutrals}
   SID = ANCQ01_VadaHvorostPDA
   IsQuestItem = false
struct.end
E07_MQ02_SyhinOffice_Item : struct.begin {refkey=QuestItem_Note_A4}
   SID = E07_MQ02_SyhinOffice_Item
   IsQuestItem = false
struct.end
E05_SQ03_PDASavruk : struct.begin {refkey=BasePDA_Ward}
   SID = E05_SQ03_PDASavruk
   IsQuestItem = true
struct.end
E05_SQ03_DocsAboutX11Equipment : struct.begin {refkey=QuestItem_Notepad_Officer}
   SID = E05_SQ03_DocsAboutX11Equipment
   IsQuestItem = false
struct.end
E07_MQ01_SkiperPDA : struct.begin {refkey=BasePDA_Mercs}
   SID = E07_MQ01_SkiperPDA
   IsQuestItem = false
struct.end
E07_MQ02_SyhinPDA_Item : struct.begin {refkey=BasePDA_Military}
   SID = E07_MQ02_SyhinPDA_Item
   IsQuestItem = false
struct.end
EQ148_KostasPDA : struct.begin {refkey=BasePDA_Military}
   SID = EQ148_KostasPDA
   IsQuestItem = false
struct.end
E07_MQ02_SyhinStash_Item : struct.begin {refkey=QuestItem_Note_Notebook}
   SID = E07_MQ02_SyhinStash_Item
   IsQuestItem = false
struct.end
E07_EQ01_ZelenyjPDA : struct.begin {refkey=BasePDA_Neutrals}
   SID = E07_EQ01_ZelenyjPDA
   IsQuestItem = false
struct.end
ANCQ04_LokotPDA : struct.begin {refkey=BasePDA_Bandits}
   SID = ANCQ04_LokotPDA
   IsQuestItem = false
struct.end
ANCQ10_NoteMedic : struct.begin {refkey=QuestItem_Note_Notepad}
   SID = ANCQ10_NoteMedic
   IsQuestItem = false
struct.end
EQ155_CollarController : struct.begin {refkey=QuestItem_Collar_N1}
   SID = EQ155_CollarController
   IsQuestItem = false
struct.end
E10_MQ01_LeaderPDA_Item : struct.begin {refkey=BasePDA_Mercs}
   SID = E10_MQ01_LeaderPDA_Item
   IsQuestItem = false
struct.end
E08_MQ01_ActivationInstruction : struct.begin {refkey=QuestItem_Note_A4}
   SID = E08_MQ01_ActivationInstruction
   IsQuestItem = false
struct.end
E08_MQ01_TuningInstruction : struct.begin {refkey=QuestItem_Folder_Journal}
   SID = E08_MQ01_TuningInstruction
   IsQuestItem = false
struct.end
EQ155_BromPDA : struct.begin {refkey=BasePDA_Bandits}
   SID = EQ155_BromPDA
   IsQuestItem = false
struct.end
EQ156_MorozPDA : struct.begin {refkey=BasePDA_Spark}
   SID = EQ156_MorozPDA
   IsQuestItem = false
struct.end
EQ156_CaseBones : struct.begin {refkey=QuestItem_Case_Sci}
   SID = EQ156_CaseBones
   IsQuestItem = true
struct.end
SQ87_AdikPedalPDA : struct.begin {refkey=BasePDA_Bandits}
   SID = SQ87_AdikPedalPDA
   IsQuestItem = false
struct.end
SQ87_AdikPedalKey : struct.begin {refkey=QuestItem_Key_DoorOld}
   SID = SQ87_AdikPedalKey
   IsQuestItem = false
struct.end
SQ87_ZenaGlybaPDA : struct.begin {refkey=BasePDA_Neutrals}
   SID = SQ87_ZenaGlybaPDA
   IsQuestItem = false
struct.end
EQ146_MonolithPDA : struct.begin {refkey=BasePDA_Monolith}
   SID = EQ146_MonolithPDA
   IsQuestItem = false
struct.end
E10_MQ01_SiviyPDA_Item : struct.begin {refkey=BasePDA_Neutrals}
   SID = E10_MQ01_SiviyPDA_Item
   IsQuestItem = true
struct.end
E10_MQ01_YarlPDA_Item : struct.begin {refkey=BasePDA_Mercs}
   SID = E10_MQ01_YarlPDA_Item
   IsQuestItem = true
struct.end
E10_MQ01_VolkodavPDA_Item : struct.begin {refkey=BasePDA}
   SID = E10_MQ01_VolkodavPDA_Item
   IsQuestItem = true
struct.end
E08_SQ01_KardanDvupalovFirstPDA : struct.begin {refkey=BasePDA_Neutrals}
   SID = E08_SQ01_KardanDvupalovFirstPDA
   IsQuestItem = true
struct.end
E08_SQ01_KardanDvupalovSecondPDA : struct.begin {refkey=BasePDA}
   SID = E08_SQ01_KardanDvupalovSecondPDA
   IsQuestItem = true
struct.end
EQ163_PripoyFuneralPaperNote : struct.begin {refkey=QuestItem_Note_Notepad}
   SID = EQ163_PripoyFuneralPaperNote
   IsQuestItem = false
struct.end
RSQ07_Item : struct.begin {refkey=QuestItem_Case_Nato}
   SID = RSQ07_Item
   IsQuestItem = true
struct.end
RSQ07_Item2 : struct.begin {refkey=QuestItem_Case_Sci}
   SID = RSQ07_Item
   IsQuestItem = true
struct.end
E10_MQ02_OldPDA : struct.begin {refkey=BasePDA_Monolith}
   SID = E10_MQ02_OldPDA
   IsQuestItem = false
struct.end
E10_MQ02_Monolith_Report : struct.begin {refkey=QuestItem_Note_Ragged}
   SID = E10_MQ02_Monolith_Report
   IsQuestItem = false
struct.end
E10_MQ02_Regenerator : struct.begin {refkey=[0]}
   SID = E10_MQ02_Regenerator
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/T_inv_needrename_5.T_inv_needrename_5'
   MeshPrototypeSID = QuestItem_MonolithLamp_Regenerator
   ItemGridWidth = 2
   ItemGridHeight = 3
   IsQuestItem = true
   Cost = 5000
   Weight = 6
struct.end
RSQ08_Item : struct.begin {refkey=QuestItem_Case_Diplomat}
   SID = RSQ08_Item
   IsQuestItem = true
struct.end
RSQ08_Item2 : struct.begin {refkey=QuestItem_USB_Modern_Darkblue}
   SID = RSQ08_Item2
   IsQuestItem = true
struct.end
RSQ09_Item : struct.begin {refkey=QuestItem_Case_Diplomat}
   SID = RSQ09_Item
   IsQuestItem = true
struct.end
RSQ010_Item : struct.begin {refkey=QuestItem_Case_Mil}
   SID = RSQ10_Item
   IsQuestItem = true
struct.end
E07_MQ03_SciDictaphone1 : struct.begin {refkey=QuestItem_Recorder_Base}
   SID = E07_MQ03_SciDictaphone1
   IsQuestItem = false
struct.end
E07_MQ03_SciDictaphone2 : struct.begin {refkey=QuestItem_Recorder_Base}
   SID = E07_MQ03_SciDictaphone2
   IsQuestItem = false
struct.end
E07_MQ03_SciDictaphone3 : struct.begin {refkey=QuestItem_Recorder_Base}
   SID = E07_MQ03_SciDictaphone3
   IsQuestItem = false
struct.end
E07_MQ03_ArchiveRecord : struct.begin {refkey=QuestItem_Recorder_Base}
   SID = E07_MQ03_ArchiveRecord
   IsQuestItem = false
struct.end
E07_MQ01_SinajAudiolog : struct.begin {refkey=BasePDA_Monolith}
   SID = E07_MQ01_SinajAudiolog
   IsQuestItem = false
struct.end
E07_MQ01_TihiyDocuments : struct.begin {refkey=QuestItem_Notepad_Leather}
   SID = E07_MQ01_TihiyDocuments
   IsQuestItem = false
struct.end
E08_EQ02_DenyaByvalyiPDA : struct.begin {refkey=BasePDA_Bandits}
   SID = E08_EQ02_DenyaByvalyiPDA
   IsQuestItem = true
struct.end
E10_MQ01_ArhipPDA_Item : struct.begin {refkey=BasePDA_Neutrals}
   SID = E10_MQ01_ArhipPDA_Item
   IsQuestItem = false
struct.end
E10_MQ01_TundraPDA_Item : struct.begin {refkey=BasePDA_Neutrals}
   SID = E10_MQ01_TundraPDA_Item
   IsQuestItem = false
struct.end
E08_EQ03_KrikPDA : struct.begin {refkey=BasePDA_Neutrals}
   SID = E08_EQ03_KrikPDA
   IsQuestItem = false
struct.end
E08_MQ01_DesiatovPlea : struct.begin {refkey=QuestItem_Note_A4}
   SID = E08_MQ01_DesiatovPlea
   IsQuestItem = false
struct.end
E08_MQ01_Razumovskij_Experiments : struct.begin {refkey=QuestItem_Recorder_Base}
   SID = E08_MQ01_Razumovskij_Experiments
   IsQuestItem = false
struct.end
E08_MQ01_Razumovskij_GoingMad : struct.begin {refkey=QuestItem_Recorder_Base}
   SID = E08_MQ01_Razumovskij_GoingMad
   IsQuestItem = false
struct.end
E08_MQ01_Desiatov_SumUp : struct.begin {refkey=QuestItem_Recorder_Base}
   SID = E08_MQ01_Desiatov_SumUp
   IsQuestItem = false
struct.end
EQ161_kudravyjPDA : struct.begin {refkey=BasePDA_Neutrals}
   SID = EQ161_kudravyjPDA
   IsQuestItem = false
struct.end
ANCQ16_GrushaPDA : struct.begin {refkey=BasePDA_Neutrals}
   SID = ANCQ16_GrushaPDA
   IsQuestItem = false
struct.end
ANCQ17_DroppedPDA : struct.begin {refkey=BasePDA_Bandits}
   SID = ANCQ17_DroppedPDA
   IsQuestItem = false
struct.end
EQ144_GlazgoPDA : struct.begin {refkey=BasePDA_Neutrals}
   SID = EQ144_GlazgoPDA
   IsQuestItem = false
struct.end
SQ88_MacekPDA : struct.begin {refkey=BasePDA_Military}
   SID = SQ88_MacekPDA
   IsQuestItem = true
struct.end
SQ88_GrebenNote : struct.begin {refkey=BasePDA_Neutrals}
   SID = SQ88_GrebenNote
   IsQuestItem = true
struct.end
E06_MQ01_ZombieNote_Item : struct.begin {refkey=QuestItem_Notepad_Paper}
   SID = E06_MQ01_ZombieNote_Item
   IsQuestItem = false
struct.end
E06_MQ01_ExperimentNote_Item : struct.begin {refkey=BasePDA}
   SID = E06_MQ01_ExperimentNote_Item
   IsQuestItem = false
struct.end
Malahit_KeyCard : struct.begin {refkey=QuestItem_KeyCard_Green}
   SID = Malahit_KeyCard
   IsQuestItem = true
   MaxStackCount = 100
struct.end
EQ148_KeyFromControllerHall : struct.begin {refkey=QuestItem_Key_DoorOld}
   SID = EQ148_KeyFromControllerHall
   IsQuestItem = false
struct.end
ANCQ_19_BanditDiary : struct.begin {refkey=QuestItem_Notepad_Paper}
   SID = ANCQ_19_BanditDiary
   IsQuestItem = false
struct.end
ANC_18_IOUNote : struct.begin {refkey=QuestItem_Note_Ragged}
   SID = ANC_18_IOUNote
   IsQuestItem = false
struct.end
E11_MQ04_DoorKey : struct.begin {refkey=QuestItem_Key_DoorNew}
   SID = E11_MQ04_DoorKey
   IsQuestItem = true
   Cost = 150
struct.end
NegodaPDA : struct.begin {refkey=BasePDA}
   SID = NegodaPDA
   IsQuestItem = true
struct.end
E11_MQ02_KaymanovDiary : struct.begin {refkey=QuestItem_Note_Kaimanov}
   SID = E11_MQ02_KaymanovDiary
   IsQuestItem = false
struct.end
E11_MQ02_2ndKaymanovDiary : struct.begin {refkey=QuestItem_Note_Kaimanov}
   SID = E11_MQ02_2ndKaymanovDiary
   IsQuestItem = false
struct.end
E11_MQ02_3rdKaymanovDiary : struct.begin {refkey=QuestItem_Note_Kaimanov}
   SID = E11_MQ02_3rdKaymanovDiary
   IsQuestItem = false
struct.end
E11_MQ02_KeyCardX15 : struct.begin {refkey=QuestItem_KeyCard_Blue}
   SID = E11_MQ02_KeyCardX15
   IsQuestItem = true
struct.end
E11_MQ02_InstAntNote : struct.begin {refkey=QuestItem_Notepad_Paper}
   SID = E11_MQ02_InstAntNote
   IsQuestItem = true
struct.end
E11_MQ02_CodeToBunkerDoorNote : struct.begin {refkey=QuestItem_Note_Ragged}
   SID = E11_MQ02_CodeToBunkerDoorNote
   IsQuestItem = false
struct.end
SQ90_GribPDA : struct.begin {refkey=BasePDA_Bandits}
   SID = SQ90_GribPDA
   IsQuestItem = false
struct.end
SQ90_ParikPDA : struct.begin {refkey=BasePDA_Bandits}
   SID = SQ90_ParikPDA
   IsQuestItem = false
struct.end
SQ90_ToropygaPDA : struct.begin {refkey=BasePDA_Bandits}
   SID = SQ90_ToropygaPDA
   IsQuestItem = false
struct.end
SQ90_FreedomPDA : struct.begin {refkey=BasePDA_Freedom}
   SID = SQ90_FreedomPDA
   IsQuestItem = false
struct.end
SQ90_SefPDA : struct.begin {refkey=BasePDA_Bandits}
   SID = SQ90_SefPDA
   IsQuestItem = false
struct.end
SQ90_KeyFromTunnels : struct.begin {refkey=QuestItem_Key_DoorOld}
   SID = SQ90_KeyFromTunnels
   IsQuestItem = false
struct.end
SQ90_PseudoGiantCollar : struct.begin {refkey=QuestItem_Collar_N1}
   SID = SQ90_PseudoGiantCollar
   IsQuestItem = true
struct.end
E14_MQ01_LaundromatDocs_Item : struct.begin {refkey=QuestItem_Note_Ragged}
   SID = E14_MQ01_LaundromatDocs_Item
   IsQuestItem = true
   Cost = 250
struct.end
E14_MQ01_Helicopter_Item : struct.begin {refkey=QuestItem_USB_Damaged_Black}
   SID = E14_MQ01_Helicopter_Item
   IsQuestItem = true
struct.end
E14_MQ01_Prometey_Spark_Item : struct.begin {refkey=BasePDA_Spark}
   SID = E14_MQ01_Prometey_Spark_Item
   IsQuestItem = true
struct.end
E14_MQ01_Prometey_Varta_Item : struct.begin {refkey=BasePDA_Ward}
   SID = E14_MQ01_Prometey_Varta_Item
   IsQuestItem = true
struct.end
E14_MQ01_Coordinates_Item : struct.begin {refkey=BasePDA}
   SID = E14_MQ01_Coordinates_Item
   IsQuestItem = true
   Cost = 1000
struct.end
EQ26_EmptyFlashDrive : struct.begin {refkey=QuestItem_USB_Modern_White}
   SID = EQ26_EmptyFlashDrive
   IsQuestItem = false
struct.end
EQ26_FlashDriveWithData : struct.begin {refkey=QuestItem_USB_Modern_White}
   SID = EQ26_FlashDriveWithData
   IsQuestItem = false
struct.end
EQ26_LevsaPDA_Alternative : struct.begin {refkey=BasePDA_Neutrals}
   SID = EQ26_LevsaPDA_Alternative
   IsQuestItem = false
struct.end
E14_MQ01_SCAT7Flask_Item : struct.begin {refkey=QuestItem_USB_Stalker_Red}
   SID = E14_MQ01_SCAT7Flask_Item
   IsQuestItem = false
   Cost = 800
struct.end
ANCQ15_NoteRat : struct.begin {refkey=BasePDA_Bandits}
   SID = ANCQ15_NoteRat
   IsQuestItem = false
struct.end
ANCQ16_PDALetyn : struct.begin {refkey=BasePDA_Bandits}
   SID = ANCQ16_PDALetyn
   IsQuestItem = false
struct.end
ANCQ17_AboutVaranPDA : struct.begin {refkey=BasePDA_Bandits}
   SID = ANCQ17_AboutVaranPDA
   IsQuestItem = false
struct.end
SQ89_ZhgutPDA : struct.begin {refkey=BasePDA_Neutrals}
   SID = SQ89_ZhgutPDA
   IsQuestItem = false
struct.end
SQ92_MangustPDA : struct.begin {refkey=BasePDA_Spark}
   SID = SQ92_MangustPDA
   IsQuestItem = false
struct.end
SQ92_VolkovPDA : struct.begin {refkey=BasePDA_Ward}
   SID = SQ92_VolkovPDA
   IsQuestItem = false
struct.end
EQ10_PalPalychPDA : struct.begin {refkey=BasePDA_Neutrals}
   SID = EQ10_PalPalychPDA
   IsQuestItem = false
struct.end
E12_MQ01_PDADuh : struct.begin {refkey=BasePDA_Neutrals}
   SID = E12_MQ01_PDADuh
   IsQuestItem = true
struct.end
EQ167_NoteOtshelnik : struct.begin {refkey=QuestItem_Note_Notepad}
   SID = EQ167_NoteOtshelnik
   IsQuestItem = false
struct.end
EQ165_USBTrachuk : struct.begin {refkey=QuestItem_USB_Stalker_Big}
   SID = EQ165_USBTrachuk
   IsQuestItem = true
struct.end
EQ165_TrachukPDA : struct.begin {refkey=BasePDA_Neutrals}
   SID = EQ165_TrachukPDA
   IsQuestItem = false
struct.end
E12_MO01_PhotoIskra : struct.begin {refkey=QuestItem_Note_A4}
   SID = E12_MO01_PhotoIskra
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/T_inv_uni_spark_photo_01.T_inv_uni_spark_photo_01'
   MeshPrototypeSID = E12_MO01_PhotoIskra
   IsQuestItem = true
   Cost = 500
   Weight = 0.02
struct.end
E08_EQ01_CollarBayun : struct.begin {refkey=QuestItem_Collar_N2}
   SID = E08_EQ01_CollarBayun
   IsQuestItem = true
struct.end
E08_EQ02_CollarSnork : struct.begin {refkey=QuestItem_Collar_N2}
   SID = E08_EQ02_CollarSnork
   IsQuestItem = true
struct.end
E08_EQ03_CollarBloodsucker : struct.begin {refkey=QuestItem_Collar_N2}
   SID = E08_EQ03_CollarBloodsucker
   IsQuestItem = true
struct.end
E11_MQ04_PDA_Chernozem : struct.begin {refkey=BasePDA_Bandits}
   SID = E11_MQ04_PDA_Chernozem
   IsQuestItem = false
struct.end
E11_MQ04_PDA_Nestor : struct.begin {refkey=BasePDA_Bandits}
   SID = E11_MQ04_PDA_Nestor
   IsQuestItem = false
struct.end
E11_MQ04_Protocol78_Instruction : struct.begin {refkey=QuestItem_Folder_Blue}
   SID = E11_MQ04_Protocol78_Instruction
   IsQuestItem = false
struct.end
E08_SQ01_KartezhnykPDA_Item : struct.begin {refkey=BasePDA_Freedom}
   SID = E08_SQ01_KartezhnykPDA_Item
   IsQuestItem = false
struct.end
E02_SQ01_HmuriyPDA : struct.begin {refkey=BasePDA_Neutrals}
   SID = E02_SQ01_HmuriyPDA
   IsQuestItem = false
struct.end
Zalesie_KoldunNote : struct.begin {refkey=QuestItem_Note_Notepad}
   SID = Zalesie_KoldunNote
   IsQuestItem = false
struct.end
Zalesie_HomakNote : struct.begin {refkey=QuestItem_Note_Notepad}
   SID = Zalesie_HomakNote
   IsQuestItem = false
struct.end
Zalesie_NoteFromNikolaich : struct.begin {refkey=QuestItem_Note_Notepad}
   SID = Zalesie_NoteFromNikolaich
   IsQuestItem = false
struct.end
Zalesie_LinzaPDANoteItem : struct.begin {refkey=QuestItem_Note_Notepad}
   SID = Zalesie_LinzaPDANoteItem
   IsQuestItem = false
struct.end
ANCQ20_Lost_PDA : struct.begin {refkey=BasePDA_Neutrals}
   SID = ANCQ20_Lost_PDA
   IsQuestItem = false
struct.end
ANCQ21_MemoryDiary : struct.begin {refkey=QuestItem_Note_Notebook}
   SID = ANCQ21_MemoryDiary
   IsQuestItem = false
struct.end
ANCQ22_ClearSkyNote : struct.begin {refkey=QuestItem_Note_Notepad}
   SID = ANCQ22_ClearSkyNote
   IsQuestItem = false
struct.end
ANCQ23_AtasPDA : struct.begin {refkey=BasePDA_Bandits}
   SID = ANCQ23_AtasPDA
   IsQuestItem = false
struct.end
E16_MQ03_StrelokPDA : struct.begin {refkey=[0]}
   SID = E16_MQ03_StrelokPDA
   MeshPrototypeSID = E16_MQ03_StrelokPDA
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/T_inv_que_pda_old.T_inv_que_pda_old'
   IsQuestItem = true
   ItemGridWidth = 1
   ItemGridHeight = 2
   Weight = 0.5
   Cost = 9000
struct.end
E16_MQ03_4thKaymanovDiary : struct.begin {refkey=QuestItem_Note_Kaimanov}
   SID = E16_MQ03_4thKaymanovDiary
   IsQuestItem = false
struct.end
E16_MQ03_5thKaymanovDiary : struct.begin {refkey=QuestItem_Note_Kaimanov}
   SID = E16_MQ03_5thKaymanovDiary
   IsQuestItem = false
struct.end
E16_MQ03_6thKaymanovDiary : struct.begin {refkey=QuestItem_Note_Kaimanov}
   SID = E16_MQ03_6thKaymanovDiary
   IsQuestItem = false
struct.end
E16_MQ03_Instruction : struct.begin {refkey=QuestItem_Note_Kaimanov}
   SID = E16_MQ03_Instruction
   IsQuestItem = false
struct.end
E16_MQ03_CaribbeanDoc : struct.begin {refkey=QuestItem_Note_Kaimanov}
   SID = E16_MQ03_CaribbeanDoc
   IsQuestItem = false
struct.end
E16_AgentSFile_Atchive : struct.begin {refkey=QuestItem_Folder_Brown}
   SID = E16_AgentSFile_Atchive
   IsQuestItem = false
struct.end
E16_MQ01_PDA_Scar : struct.begin {refkey=BasePDA_Spark}
   SID = E16_MQ01_PDA_Scar
   Cost = 200
   IsQuestItem = false
struct.end
E16_MQ03_KeyKard_Granite : struct.begin {refkey=QuestItem_KeyCard_Blue}
   SID = E16_MQ03_KeyKard_Granite
   IsQuestItem = false
struct.end
SQ88_KuvaldaDiary : struct.begin {refkey=QuestItem_Notepad_Leather}
   SID = SQ88_KuvaldaDiary
   IsQuestItemPrototype = true
   IsQuestItem = true
struct.end
EQ08_FreshBread : struct.begin {refurl=ConsumablePrototypes.cfg;refkey=FreshBread}
   SID = EQ08_FreshBread
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/T_inv_FreshBread.T_inv_FreshBread'
   IsQuestItemPrototype = true
   IsQuestItem = false
   Cost = 180
struct.end
EQ82_konserva : struct.begin {refurl=ConsumablePrototypes.cfg;refkey=SpoiledCannedFood}
   SID = EQ82_konserva
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/T_inv_qkonserva.T_inv_qkonserva'
   IsQuestItemPrototype = true
   IsQuestItem = false
   Cost = 30
struct.end
ANCQ24_VenyaNotes : struct.begin {refkey=[0]}
   SID = ANCQ24_VenyaNotes
   IsQuestItemPrototype = true
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = true
   ShouldTriggerAnomalies = false
   Type = EItemType::Other
   RequireWeight = false
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/IIT_QuestItem_Note_Ragged.IIT_QuestItem_Note_Ragged'
   MeshPrototypeSID = QuestItem_Note_Ragged
   ItemGridWidth = 1
   ItemGridHeight = 1
   Weight = 0.05
   Cost = 200
struct.end
SQ06_PDA_ZombieScientist : struct.begin {refkey=BasePDA_Neutrals}
   SID = SQ06_PDA_ZombieScientist
   IsQuestItemPrototype = true
   IsQuestItem = true
struct.end
E16_MQ03_CartridgeSkif : struct.begin {refkey=[0]}
   SID = E16_MQ03_CartridgeSkif
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/T_inv_vector_cartridge_01_1.T_inv_vector_cartridge_01_1'
   ItemGridWidth = 1
   ItemGridHeight = 1
   MeshPrototypeSID = E16_MQ03_CartridgeSkif
   IsQuestItem = true
   Weight = 0.05
   Cost = 120
struct.end
QuestArtifactHeartofChornobyl : struct.begin {refurl=/ArtifactPrototypes.cfg;refkey=TemplateArtifact}
   SID = QuestArtifactHeartofChornobyl
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Artifacts/Heart_of_Chornobyl.Heart_of_Chornobyl'
   Weight = 0.5
   Strafe = false
   Blueprint = Blueprint'/Game/GameLite/Blueprints/Artifact/ArchiAnomaly/BP_QArtifact_Heart.BP_QArtifact_Heart'
   MeshPrototypeSID = ArtifactHeartofChornobyl
   EffectPrototypeSIDs : struct.begin
      [0] = Artifact_HeartOfChornobyl_RegenHP
   struct.end
struct.end
E11_MQ01_DeciphererX3 : struct.begin {refkey=[0]}
   SID = E11_MQ01_DeciphererX3
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/T_inv_DeciphererX3.T_inv_DeciphererX3'
   MeshPrototypeSID = E11_MQ01_DeciphererX3
   ItemGridWidth = 1
   ItemGridHeight = 1
   IsQuestItem = true
   Weight = 0.3
   Cost = 1200
struct.end
E14_MQ02_Tunnels : struct.begin {refkey=QuestItem_KeyCard_Red}
   SID = E14_MQ02_Tunnels
struct.end
E14_MQ02_MobileBunkers : struct.begin {refkey=QuestItem_KeyCard_Green}
   SID = E14_MQ02_MobileBunkers
struct.end
Terricon_PDAAboutFriend : struct.begin {refkey=BasePDA_Neutrals}
   SID = Terricon_PDAAboutFriend
   IsQuestItem = false
struct.end
Terricon_NoteListItem : struct.begin {refkey=QuestItem_Note_Notepad}
   SID = Terricon_NoteListItem
   IsQuestItem = false
struct.end
Terricon_Hub_MertvakPDA : struct.begin {refkey=BasePDA_Bandits}
   SID = Terricon_Hub_MertvakPDA
   IsQuestItem = false
struct.end
Terricon_Hub_KisaPDA : struct.begin {refkey=BasePDA_Bandits}
   SID = Terricon_Hub_KisaPDA
   IsQuestItem = false
struct.end
Terricon_Hub_ZoraPalitraPDA : struct.begin {refkey=BasePDA_Bandits}
   SID = Terricon_Hub_ZoraPalitraPDA
   IsQuestItem = false
struct.end
NoonBase_Hub_PancyrPDA : struct.begin {refkey=BasePDA_Neutrals}
   SID = NoonBase_Hub_PancyrPDA
   IsQuestItem = false
struct.end
NoonBase_Hub_VectorPDA : struct.begin {refkey=BasePDA_Neutrals}
   SID = NoonBase_Hub_VectorPDA
   IsQuestItem = false
struct.end
E04_Note_UnityNote : struct.begin {refkey=QuestItem_Note_Notepad}
   SID = E04_Note_UnityNote
   IsQuestItem = false
struct.end
NoonBase_Hub_RoslyPDA : struct.begin {refkey=BasePDA_Neutrals}
   SID = NoonBase_Hub_RoslyPDA
   IsQuestItem = false
struct.end
E04_NoteDubnyjToBrodyagaItem : struct.begin {refkey=QuestItem_Note_Notepad}
   SID = E04_NoteDubnyjToBrodyagaItem
   IsQuestItem = false
struct.end
NoonBase_Hub_ZavhozPDA : struct.begin {refkey=BasePDA_Neutrals}
   SID = NoonBase_Hub_ZavhozPDA
   IsQuestItem = false
struct.end
IKAR_PikmanPDA : struct.begin {refkey=BasePDA_Ward}
   SID = IKAR_PikmanPDA
   IsQuestItem = false
struct.end
Sultansk_NoteKalinaListItem : struct.begin {refkey=QuestItem_Note_Notepad}
   SID = Sultansk_NoteKalinaListItem
   IsQuestItem = false
struct.end
Sultansk_PDAKalinaItem : struct.begin {refkey=BasePDA_Bandits}
   SID = Sultansk_PDAKalinaItem
   IsQuestItem = false
struct.end
Sultansk_PDASultan : struct.begin {refkey=BasePDA_Bandits}
   SID = Sultansk_PDASultan
   IsQuestItem = false
struct.end
Sultansk_PDASych : struct.begin {refkey=BasePDA_Bandits}
   SID = Sultansk_PDASych
   IsQuestItem = false
struct.end
Sultansk_NoteKalinaItem : struct.begin {refkey=QuestItem_Note_Notepad}
   SID = Sultansk_NoteKalinaItem
   IsQuestItem = false
struct.end
Sultansk_NoteAgreementItem : struct.begin {refkey=QuestItem_Note_Notepad}
   SID = Sultansk_NoteAgreementItem
   IsQuestItem = false
struct.end
Sultansk_NotePartyItem : struct.begin {refkey=QuestItem_Note_Notepad}
   SID = Sultansk_NotePartyItem
   IsQuestItem = false
struct.end
Sultansk_PDARyhlyi : struct.begin {refkey=BasePDA_Bandits}
   SID = Sultansk_PDARyhlyi
   IsQuestItem = false
struct.end
Sultansk_NoteZlotarItem : struct.begin {refkey=QuestItem_Note_Notepad}
   SID = Sultansk_NoteZlotarItem
   IsQuestItem = false
struct.end
Sultansk_PDAChilik : struct.begin {refkey=BasePDA_Bandits}
   SID = Sultansk_PDAChilik
   IsQuestItem = false
struct.end
Sultansk_NoteKalinaDebtItem : struct.begin {refkey=QuestItem_Note_Notepad}
   SID = Sultansk_NoteKalinaDebtItem
   IsQuestItem = false
struct.end
Sultansk_NoteKalinaSituationItem : struct.begin {refkey=QuestItem_Note_Notepad}
   SID = Sultansk_NoteKalinaSituationItem
   IsQuestItem = false
struct.end
Sultansk_Hub_PDADeadBody : struct.begin {refkey=BasePDA_Neutrals}
   SID = Sultansk_Hub_PDADeadBody
   IsQuestItem = false
struct.end
Shevchenko_NoteDiaryItem : struct.begin {refkey=QuestItem_Note_Notepad}
   SID = Shevchenko_NoteDiaryItem
   IsQuestItem = false
struct.end
Shevchenko_NoteBorodaItem : struct.begin {refkey=QuestItem_Note_Notepad}
   SID = Shevchenko_NoteBorodaItem
   IsQuestItem = false
struct.end
Shevchenko_Camp_BorodaPDA : struct.begin {refkey=BasePDA_Neutrals}
   SID = Shevchenko_Camp_BorodaPDA
   IsQuestItem = false
struct.end
Malahit_PDADorojnuk : struct.begin {refkey=BasePDA_Neutrals}
   SID = Malahit_PDADorojnuk
   IsQuestItem = false
struct.end
Malahit_Hub_NoteCV : struct.begin {refkey=QuestItem_Note_Notepad}
   SID = Malahit_Hub_NoteCV
   IsQuestItem = false
struct.end
Malahit_PDAKuprienko : struct.begin {refkey=BasePDA_Neutrals}
   SID = Malahit_PDAKuprienko
   IsQuestItem = false
struct.end
Yanov_NoteOrder : struct.begin {refkey=QuestItem_Note_Notepad}
   SID = Yanov_NoteOrder
   IsQuestItem = false
struct.end
Yanov_KostaBanduraPDA : struct.begin {refkey=BasePDA_Neutrals}
   SID = Yanov_KostaBanduraPDA
   IsQuestItem = false
struct.end
Yanov_NoteHana : struct.begin {refkey=QuestItem_Note_Notepad}
   SID = Yanov_NoteHana
   IsQuestItem = false
struct.end
Yanov_SenaDymPDA : struct.begin {refkey=BasePDA_Neutrals}
   SID = Yanov_SenaDymPDA
   IsQuestItem = false
struct.end
Yanov_Note_ToDoListItem : struct.begin {refkey=QuestItem_Note_Notepad}
   SID = Yanov_Note_ToDoListItem
   IsQuestItem = false
struct.end
Yanov_PDA_Garpia : struct.begin {refkey=BasePDA_Military}
   SID = Yanov_PDA_Garpia
   IsQuestItem = false
struct.end
Yanov_PDA_Nor : struct.begin {refkey=BasePDA_Military}
   SID = Yanov_PDA_Nor
   IsQuestItem = false
struct.end
Himzavod_Hub_Note_1Item : struct.begin {refkey=QuestItem_Note_Notepad}
   SID = Himzavod_Hub_Note_1Item
   IsQuestItem = false
struct.end
Himzavod_Hub_Note_2Item : struct.begin {refkey=QuestItem_Note_Notepad}
   SID = Himzavod_Hub_Note_2Item
   IsQuestItem = false
struct.end
RookieVillage_WolfPDA : struct.begin {refkey=BasePDA_Neutrals}
   SID = RookieVillage_WolfPDA
   IsQuestItem = false
struct.end
RookieVillage_MassandraPDA : struct.begin {refkey=BasePDA_Neutrals}
   SID = RookieVillage_MassandraPDA
   IsQuestItem = false
struct.end
Rostok_NoteToShevchenkoItem : struct.begin {refkey=QuestItem_Note_Notepad}
   SID = Rostok_NoteToShevchenkoItem
   IsQuestItem = false
struct.end
Rostok_NoteToSultanskItem : struct.begin {refkey=QuestItem_Note_Notepad}
   SID = Rostok_NoteToSultanskItem
   IsQuestItem = false
struct.end
Rostok_NoteAgreementItem : struct.begin {refkey=QuestItem_Note_Notepad}
   SID = Rostok_NoteAgreementItem
   IsQuestItem = false
struct.end
Rostok_YarikChillPDA : struct.begin {refkey=BasePDA_Freedom}
   SID = Rostok_YarikChillPDA
   IsQuestItem = false
struct.end
Rostok_PDAPolovin : struct.begin {refkey=BasePDA_Duty}
   SID = Rostok_PDAPolovin
   IsQuestItem = false
struct.end
Rostok_PDA_Lost : struct.begin {refkey=BasePDA_Freedom}
   SID = Rostok_PDA_Lost
   IsQuestItem = false
struct.end
Rostok_PDA_Doctor : struct.begin {refkey=BasePDA_Neutrals}
   SID = Rostok_PDA_Doctor
   IsQuestItem = false
struct.end
Prypat_NoteItem1 : struct.begin {refkey=QuestItem_Note_Notepad}
   SID = Prypat_NoteItem1
   IsQuestItem = false
struct.end
Prypat_NoteItem2 : struct.begin {refkey=QuestItem_Note_Notepad}
   SID = Prypat_NoteItem2
   IsQuestItem = false
struct.end
SQ87_ZenaGlybaPDA_Alternative : struct.begin {refkey=BasePDA_Neutrals}
   SID = SQ87_ZenaGlybaPDA_Alternative
   IsQuestItem = false
struct.end
SQ87_ZenaGlybaPDA_Alternative_SkifLeave : struct.begin {refkey=BasePDA_Neutrals}
   SID = SQ87_ZenaGlybaPDA_Alternative_SkifLeave
   IsQuestItem = false
struct.end
RSQ07_C09_ContainerItem : struct.begin {refkey=QuestItem_Case_Blue}
   SID = RSQ07_C09_ContainerItem
   IsQuestItem = true
struct.end
RSQ01_NewbiePDA : struct.begin {refkey=BasePDA_Neutrals}
   SID = RSQ01_NewbiePDA
   IsQuestItem = true
struct.end
RSQ01_NewbiePDA2 : struct.begin {refkey=BasePDA_Neutrals}
   SID = RSQ01_NewbiePDA2
   IsQuestItem = true
struct.end
RSQ01_NewbiePDA3 : struct.begin {refkey=BasePDA_Neutrals}
   SID = RSQ01_NewbiePDA3
   IsQuestItem = true
struct.end
RSQ01_NewbiePDA4 : struct.begin {refkey=BasePDA_Neutrals}
   SID = RSQ01_NewbiePDA4
   IsQuestItem = true
struct.end
RSQ04_C10_GlavarPDA : struct.begin {refkey=BasePDA_Bandits}
   SID = RSQ04_C10_GlavarPDA
   IsQuestItem = true
struct.end
RSQ05_C10_IItemPDA1 : struct.begin {refkey=BasePDA_Bandits}
   SID = RSQ05_C10_IItemPDA1
   IsQuestItem = false
struct.end
RSQ05_C10_ItemPDA2 : struct.begin {refkey=BasePDA_Bandits}
   SID = RSQ05_C10_ItemPDA2
   IsQuestItem = false
struct.end
RSQ05_C10_ItemNotes3 : struct.begin {refkey=QuestItem_Note_Burnt}
   SID = RSQ05_C10_ItemNotes3
   IsQuestItem = false
struct.end
RSQ05_C10_ItemNotes4 : struct.begin {refkey=QuestItem_Note_Ragged}
   SID = RSQ05_C10_ItemNotes4
   IsQuestItem = false
struct.end
E11_MQ01_Cartridge : struct.begin {refkey=BasePDA_Neutrals}
   SID = E11_MQ01_Cartridge
   MeshPrototypeSID = E11_MQ01_Cartridge
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/T_inv_vector_cartridge_01_2.T_inv_vector_cartridge_01_2'
   ItemGridWidth = 1
   ItemGridHeight = 1
   IsQuestItem = true
   Weight = 0.05
struct.end
E11_MQ01_DarkHabar : struct.begin {refkey=QuestItem_Case_Blue}
   SID = E11_MQ01_DarkHabar
   IsQuestItem = true
struct.end
EQ144_ArtemPodvodnikPDA : struct.begin {refkey=BasePDA_Neutrals}
   SID = EQ144_ArtemPodvodnikPDA
   IsQuestItem = false
struct.end
E08_MQ03_ListWarning : struct.begin {refkey=QuestItem_Note_Notebook}
   SID = E08_MQ03_ListWarning
   IsQuestItem = true
struct.end
E08_MQ03_ConrolRoomKey : struct.begin {refkey=QuestItem_Key_DoorNew}
   SID = E08_MQ03_ConrolRoomKey
   IsQuestItem = true
struct.end
E11_MQ01_StalkerOasisPDA : struct.begin {refkey=BasePDA_Neutrals}
   SID = E11_MQ01_StalkerOasisPDA
   IsQuestItem = false
struct.end
E11_MQ01_Tracker : struct.begin {refkey=[0]}
   SID = E11_MQ01_Tracker
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/T_inv_beacon.T_inv_beacon'
   Weight = 0.2
   ItemGridWidth = 1
   ItemGridHeight = 1
   IsQuestItem = true
   MeshPrototypeSID = QuestItem_USB_Modern_White
   Cost = 200
struct.end
E08_MQ03_SherbaToDvupalov_Note : struct.begin {refkey=[0]}
   SID = E08_MQ03_SherbaToDvupalov_Note
   IsQuestItemPrototype = true
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = true
   ShouldTriggerAnomalies = false
   Type = EItemType::Other
   RequireWeight = false
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/IIT_QuestItem_Notepad_Paper.IIT_QuestItem_Notepad_Paper'
   MeshPrototypeSID = QuestItem_Notepad_Paper
   ItemGridWidth = 1
   ItemGridHeight = 2
   Weight = 0.1
   Cost = 80
struct.end
E08_MQ03_SciArticle : struct.begin {refkey=QuestItem_Note_Burnt}
   SID = E08_MQ03_SciArticle
   IsQuestItem = true
struct.end
E08_MQ03_LetterForChubko : struct.begin {refkey=QuestItem_Note_A4}
   SID = E08_MQ03_LetterForChubko
   IsQuestItem = true
struct.end
E08_MQ03_CollarsTestsData : struct.begin {refkey=QuestItem_Note_Ragged}
   SID = E08_MQ03_CollarsTestsData
   IsQuestItem = true
struct.end
E08_MQ03_DvupaloDairy : struct.begin {refkey=QuestItem_Notepad_OldDiary}
   SID = E08_MQ03_DvupaloDairy
   IsQuestItem = true
struct.end
E08_MQ03_ReceptionNote : struct.begin {refkey=QuestItem_Note_Notepad}
   SID = E08_MQ03_ReceptionNote
   IsQuestItem = true
struct.end
E08_MQ03_StrelokPDA : struct.begin {refkey=BasePDA_Neutrals}
   SID = E08_MQ03_StrelokPDA
   IsQuestItem = false
   Weight = 0.2
   Cost = 3000
struct.end
E08_MQ03_DvupalovRecorder_Mutants : struct.begin {refkey=QuestItem_Recorder_Base}
   SID = E08_MQ03_DvupalovRecorder_Mutants
   IsQuestItem = true
struct.end
E08_DvupolovRecorder_PrisonCell : struct.begin {refkey=QuestItem_Recorder_Base}
   SID = E08_DvupolovRecorder_PrisonCell
   IsQuestItem = true
struct.end
ProjectControllerDocs : struct.begin {refkey=QuestItem_Folder_File}
   SID = ProjectControllerDocs
   IsQuestItem = true
struct.end
SEQ01_BanditPDA : struct.begin {refkey=BasePDA_Bandits}
   SID = SEQ01_BanditPDA
   IsQuestItem = false
struct.end
SEQ02_StalkerPDA : struct.begin {refkey=BasePDA_Neutrals}
   SID = SEQ02_StalkerPDA
   IsQuestItem = false
struct.end
SEQ04_ScientistPDA : struct.begin {refkey=BasePDA_Neutrals}
   SID = SEQ04_ScientistPDA
   IsQuestItem = false
struct.end
SEQ05_StalkerPDA : struct.begin {refkey=BasePDA_Neutrals}
   SID = SEQ05_StalkerPDA
   IsQuestItem = false
struct.end
SEQ06_StalkerPDA : struct.begin {refkey=BasePDA_Neutrals}
   SID = SEQ06_StalkerPDA
   IsQuestItem = false
struct.end
SEQ08_StalkerPDA : struct.begin {refkey=BasePDA_Neutrals}
   SID = SEQ08_StalkerPDA
   IsQuestItem = false
struct.end
SEQ09_StalkerPDA : struct.begin {refkey=BasePDA_Neutrals}
   SID = SEQ09_StalkerPDA
   IsQuestItem = false
struct.end
SEQ10_StalkerPDA : struct.begin {refkey=BasePDA_Neutrals}
   SID = SEQ10_StalkerPDA
   IsQuestItem = false
struct.end
E08_MQ04_Explosives : struct.begin {refkey=[0]}
   SID = E08_MQ04_Explosives
   IsQuestItemPrototype = true
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/T_inv_Explosives.T_inv_Explosives'
   ItemGridWidth = 2
   ItemGridHeight = 2
   ShouldTriggerAnomalies = false
   IsQuestItem = true
   Weight = 4.5
   Cost = 5000
struct.end
EQ166_ValerianPDA : struct.begin {refkey=[0]}
   SID = EQ166_ValerianPDA
   IsQuestItemPrototype = true
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   ShouldTriggerAnomalies = false
   Type = EItemType::Other
   RequireWeight = false
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/IIT_pda_loners.IIT_pda_loners'
   ItemGridWidth = 2
   ItemGridHeight = 1
   MeshPrototypeSID = BasePDA_Neutrals
   Weight = 0.2
   Cost = 220
   IsQuestItem = false
struct.end
E12_MO01_Instruction : struct.begin {refkey=QuestItem_Note_Burnt}
   SID = E12_MO01_InstructionItem
   IsQuestItem = false
struct.end
E12_MO01_PDAOzerski : struct.begin {refkey=BasePDA_Spark}
   SID = E12_MO01_PDAOzerski
   IsQuestItem = false
struct.end
E12_MO01_GroupsNoteItem : struct.begin {refkey=QuestItem_Note_Notepad}
   SID = E12_MO01_GroupsNoteItem
   IsQuestItem = false
struct.end
E12_MQ01_SkanerMItem : struct.begin {refkey=Scanner}
   SID = E12_MQ01_SkanerMItem
   IsQuestItem = true
   Weight = 7
   MeshPrototypeSID = Scanner_E12
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/IIT_QuestItem_scanner_Topaz.IIT_QuestItem_scanner_Topaz'
struct.end
E12_MQ01_DuhStashKey : struct.begin {refkey=QuestItem_KeyCard_Blue}
   SID = E12_MQ01_DuhStashKey
   IsQuestItem = true
struct.end
E05_MQ02_KalanchaMap : struct.begin {refkey=[0]}
   SID = E05_MQ02_KalanchaMap
   IsQuestItemPrototype = true
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = true
   ShouldTriggerAnomalies = false
   Type = EItemType::Other
   RequireWeight = false
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/T_inv_QuestItem_Tubus.T_inv_QuestItem_Tubus'
   MeshPrototypeSID = QuestItem_Tubus
   ItemGridWidth = 1
   ItemGridHeight = 3
   Weight = 0.4
   Cost = 900
struct.end
E12_MO01_DuhToRihterItem : struct.begin {refkey=QuestItem_Note_Notebook}
   SID = E12_MO01_DuhToRihterItem
   IsQuestItem = true
struct.end
E07_SQ01_SurgeryKit : struct.begin {refkey=[0]}
   SID = E07_SQ01_SurgeryKit
   IsQuestItemPrototype = true
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = true
   ShouldTriggerAnomalies = false
   Type = EItemType::Other
   RequireWeight = false
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/T_inv_enteryourname.T_inv_enteryourname'
   MeshPrototypeSID = ArmyMedkit
   ItemGridWidth = 1
   ItemGridHeight = 2
   Cost = 500
   Weight = 2
struct.end
E08_MQ04_UndergroundKeycard : struct.begin {refkey=QuestItem_KeyCard_Yellow}
   SID = E08_MQ04_UndergroundKeycard
   IsQuestItem = true
struct.end
E15_MQ03_CartridgeItem : struct.begin {refkey=BasePDA_Neutrals}
   SID = E15_MQ03_CartridgeItem
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/T_inv_vector_cartridge_01_3.T_inv_vector_cartridge_01_3'
   ItemGridWidth = 1
   ItemGridHeight = 1
   IsQuestItem = true
   MeshPrototypeSID = E15_MQ03_CartridgeItem
   Weight = 0.05
struct.end
E06_MQ01_AgathaNote : struct.begin {refkey=QuestItem_Note_BrandNew}
   SID = E06_MQ01_AgathaNote
   IsQuestItem = true
struct.end
E15_MQ03_ProjectYItem : struct.begin {refkey=QuestItem_Note_Notebook}
   SID = E15_MQ03_ProjectYItem
   IsQuestItem = true
struct.end
E06_MQ01_Card : struct.begin {refkey=QuestItem_KeyCard_Green}
   SID = E06_MQ01_Card
   IsQuestItem = true
struct.end
E11_MQ03_PTSthreadNote_QIP : struct.begin {refkey=QuestItem_Folder_File}
   SID = E11_MQ03_PTSthreadNote_QIP
   IsQuestItem = false
struct.end
EchoE01 : struct.begin {refurl=DetectorPrototypes.cfg;refkey=Echo}
   SID = EchoE01
   IsQuestItem = true
   IsQuestItemPrototype = true
struct.end
E07_SQ01_NoteForDadyaLenya : struct.begin {refkey=QuestItem_Note_A4}
   SID = E07_SQ01_NoteForDadyaLenya
   IsQuestItem = false
struct.end
E16_MQ02_MarshalPDA : struct.begin {refkey=BasePDA_Spark}
   SID = E16_MQ02_MarshalPDA
   IsQuestItem = false
struct.end
E02_MQ03_RebraKey : struct.begin {refkey=QuestItem_Key_DoorOld}
   SID = E02_MQ03_RebraKey
   IsQuestItem = true
struct.end
EQ10_PastuhPDA : struct.begin {refkey=BasePDA_Neutrals}
   SID = EQ10_PastuhPDA
   IsQuestItem = true
struct.end
DLC00_PreOrder_Flashdrive_I : struct.begin {refkey=QuestItem_USB_Damaged_Black}
   SID = DLC00_PreOrder_Flashdrive_I
struct.end
DLC00_PreOrder_Flashdrive_II : struct.begin {refkey=QuestItem_USB_Damaged_Black}
   SID = DLC00_PreOrder_Flashdrive_II
struct.end
DLC00_PreOrder_Flashdrive_III : struct.begin {refkey=QuestItem_USB_Damaged_Black}
   SID = DLC00_PreOrder_Flashdrive_III
struct.end
Guitar : struct.begin {refkey=[0]}
   SID = Guitar
   MeshPrototypeSID = GuitarMesh
   MeshInWorldPrototypeSID = GuitarMeshStatic
   StaticMeshPrototypeSID = GuitarMeshStatic
   Invisible = true
   Weight = 0.f
   IsQuestItemPrototype = false
   IsQuestItem = true
struct.end
GuardQuestItem : struct.begin {refkey=[0]}
   SID = GuardQuestItem
   Weight = 0
   IsQuestItem = false
   IsQuestItemPrototype = false
   Invisible = true
struct.end
EQ35_LegendAdvice : struct.begin {refkey=QuestItem_Note_Ragged}
   SID = EQ35_LegendAdvice
   IsQuestItem = false
struct.end
SQ88_NimbleToBeardReport : struct.begin {refkey=QuestItem_Note_BrandNew}
   SID = SQ88_NimbleToBeardReport
   IsQuestItem = false
struct.end
AlteredScarsToast : struct.begin {refkey=[0]}
   SID = AlteredScarsToast
   IsQuestItemPrototype = false
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = true
   Type = EItemType::Other
   RequireWeight = false
   LocalizationSID = Altered_Toast
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/T_uni_shashlik_01_ico.T_uni_shashlik_01_ico'
   ItemGridWidth = 1
   ItemGridHeight = 1
   Weight = 0.05
struct.end
RichtersPlayer : struct.begin {refkey=QuestItem_Recorder_Base}
   SID = RichtersPlayer
   IsQuestItemPrototype = true
   // Flag marking item as quest item in terms of logical operations, eg can not be Dropped, Used or Sold
   IsQuestItem = true
   Type = EItemType::Other
   RequireWeight = false
   Icon = Texture2D'/Game/GameLite/FPS_Game/UIRemaster/UITextures/Inventory/Quest/T_hea_richter_01_a_v2.T_hea_richter_01_a_v2'
   ItemGridWidth = 1
   ItemGridHeight = 1
   Weight = 0.1
struct.end
Scanner_E05 : struct.begin {refkey=Scanner}
   SID = Scanner_E05
   Weight = 12
   LocalizationSID = Scanner
struct.end